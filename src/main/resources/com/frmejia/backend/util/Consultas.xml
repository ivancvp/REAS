<?xml version="1.0" encoding="UTF-8"?>
<Consultas>
    <Consulta id="consulta_beneficiario">
        <sql>
            SELECT 
            "IDENTIFICADOR" ,
            "Cedula 1" as cedula_evacuado,
            "Nombre 1" as nombre_evacuado,
            "Localidad" as localidad,
            "UPZ" as upz,
            "Sector" as sector,
            "Barrio" as barrio,
            "Dirección" as direccion,
            "Telefono" as telefono,
            (SELECT "Des_Estado_Proceso" from "tbl_Estados_Procesos" t WHERE t."Cod_Estado_Proceso" = def."Cod_Estado_Proceso" limit 1) as estado,            
            (select count(*) from definitiva as d where d."Sector" like '%Vereditas%' and d."IDENTIFICADOR"=def."IDENTIFICADOR" ) as estado_vereditas,
            numero_cuenta,
            (select "Des_Estado_Proceso" from "estadoProceso_Vereditas"  where  "Cod_Estado_Proceso" =def."Cod_Estado_Proceso" ) as estado_v
            FROM definitiva as def LEFT JOIN cuenta_ahorro_programado 
            ON "IDENTIFICADOR"=identificador
            where            
            (
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent("Nombre 1") )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent("Nombre 2") )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "Cedula 1"::text like '%@NOMBRE%'
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "Cedula 2"::text like '%@NOMBRE%'
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "IDENTIFICADOR" ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "IDENTIFICA_ANTERIOR" ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            cuenta_codensa ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            cuenta_acueducto ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            cuenta_gas ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "Dirección" ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "Sector" ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "Barrio" ilike '%@NOMBRE%' 
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            numero_cuenta like '%@NOMBRE%'        
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent(titular_principal) )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))            
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent("Código Chip Catastro") )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))            
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            cedula_principal::text like '%@NOMBRE%'
            )
            )
            group by "IDENTIFICADOR",cedula_evacuado,localidad,upz,sector,barrio,direccion,telefono,estado,estado_vereditas,numero_cuenta,estado_v
            UNION ALL         
            SELECT
            "Identificador" as "IDENTIFICADOR" ,
            (select "Cedula 1" from definitiva where "Identificador"= "IDENTIFICADOR" )as cedula_evacuado,
            (select  "Nombre 1" from definitiva where "Identificador"= "IDENTIFICADOR" ) as nombre_evacuado,
            (select "Localidad" from definitiva where "Identificador"= "IDENTIFICADOR" )as localidad,
            (select "UPZ" from definitiva where "Identificador"= "IDENTIFICADOR" ) as upz,
            (select "Sector" from definitiva where "Identificador"= "IDENTIFICADOR" )as sector,
            (select "Barrio" from definitiva where "Identificador"= "IDENTIFICADOR" )as barrio,
            (select "Dirección" from definitiva where "Identificador"= "IDENTIFICADOR" )as direccion,
            (select "Telefono" from definitiva where "Identificador"= "IDENTIFICADOR" )as telefono,
            (SELECT "Des_Estado_Proceso" from "tbl_Estados_Procesos" t,definitiva d  WHERE t."Cod_Estado_Proceso" = d."Cod_Estado_Proceso" AND d."IDENTIFICADOR" ="Identificador" limit 1)  as estado,
            (select count(*) from definitiva as d where d."Sector" like '%Vereditas%' and d."IDENTIFICADOR"="Identificador" ) as estado_vereditas,
            numero_cuenta,
            (select "Des_Estado_Proceso" from "estadoProceso_Vereditas" as e ,definitiva d   where  e."Cod_Estado_Proceso" =d."Cod_Estado_Proceso"  AND d."IDENTIFICADOR" ="Identificador") as estado_v
            FROM "tbl_Miembros" FULL JOIN cuenta_ahorro_programado 
            ON "Identificador"=identificador
            WHERE
            
            ((
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent("B03_Nombres") )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))          
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            "B04_Identificacion"::text like '%@NOMBRE%'
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            numero_cuenta like '%@NOMBRE%'        
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            strip(to_tsvector('spanish',unaccent(titular_principal) )) @@ to_tsquery(unaccent(array_to_string(string_to_array('@NOMBRE',' '), ' &amp; ')))            
            )
            OR
            (
            '' &lt;&gt; '@NOMBRE'
            AND
            cedula_principal::text like '%@NOMBRE%'
            )
            )
            group by "IDENTIFICADOR",cedula_evacuado,localidad,upz,sector,barrio,direccion,telefono,estado,estado_vereditas,numero_cuenta,estado_v
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="update_detalles_fechas">
        <sql>
            update definitiva set 
            "Fecha de Ingreso al Proceso"=CASE WHEN to_date('@fech_ing','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_ing','YYYY MM DD') END,
            "Fecha de Verificación de Traslado"= CASE WHEN to_date('@fech_ver','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_ver','YYYY MM DD') END,
            "Fecha acta de entrega alternativa habitacional"= CASE WHEN to_date('@fech_act','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_act','YYYY MM DD') END,
            "Fecha Entrega predio en riesgo al DADEP" = CASE WHEN to_date('@fech_ent','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_ent','YYYY MM DD') END,
            "Solicitud Adecuación del Predio a DPAE" = CASE WHEN to_date('@fech_sol','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_sol','YYYY MM DD') END,
            "Notificación Adecuación Predio en Alto riesgo" = CASE WHEN to_date('@fech_ade','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_ade','YYYY MM DD') END,
            "Fec_Notificacion_Alcaldia_Vigilancia_PAR"= CASE WHEN to_date('@fech_alc','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_alc','YYYY MM DD') END ,
            "Fecha Acta de entrega predio en riesgo a CVP" = CASE WHEN to_date('@fech_par','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fech_par','YYYY MM DD') END
            where "IDENTIFICADOR"='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="update_fecha_acta_entrega">
        <sql>
            update definitiva set 
            "Fecha Acta de entrega predio en riesgo a CVP" = CASE WHEN to_date('@fecha_acta','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_acta','DD MM YYYY') END
            where "IDENTIFICADOR"='@identificador';           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>    
    
    <Consulta id="update_detalles_servicios">
        <sql>
            
            WITH 
            sel as(
            select identificador from ficha_reconocimiento_v1 where identificador='@identificador'
            ),
            upd1 as(
                        
            update definitiva set cuenta_codensa='@cod_cta',
            estado_codensa='@cod_est',
            fecha_paz_salvo_codensa=CASE WHEN to_date('@cod_paz','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@cod_paz','YYYY MM DD') END ,
            cuenta_acueducto='@acu_cta',
            estado_acueducto='@acu_est',
            fecha_paz_salvo_acueducto=CASE WHEN to_date('@acu_paz','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@acu_paz','YYYY MM DD') END ,
            cuenta_gas='@gas_cta',
            estado_gas='@gas_est',
            fecha_paz_salvo_gas = CASE WHEN to_date('@gas_paz','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@gas_paz','YYYY MM DD') END 
            where "IDENTIFICADOR"='@identificador'
            
            ),
            upd as(
                        
            update ficha_reconocimiento_v1 set 
            acu_con='@acu_cta',
            gas_con='@gas_cta',
            ene_con='@cod_cta'
            where identificador='@identificador'
            returning identificador
            )
            select * from upd
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="visita_fallida">
        <sql>
            WITH 
            sel as (
            Select identificador from visitas_fallidas where identificador='@identificador'
            ),
            upd as(
            UPDATE visitas_fallidas
            SET 
            num_visitas_fallidas='@num_visitas',
            fecha1=CASE WHEN to_date('@fecha1','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha1','DD/MM/YYYY') END, 
            fecha2=CASE WHEN to_date('@fecha2','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha2','DD/MM/YYYY') END, 
            fecha3=CASE WHEN to_date('@fecha3','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha3','DD/MM/YYYY') END, 	
            identificador= '@identificador',
            visitas_fallidas_upd_user='@user',
            visitas_fallidas_upd_time=current_timestamp,
            observaciones='@observaciones'
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO visitas_fallidas(
            num_visitas_fallidas,
            fecha1,
            fecha2,
            fecha3,
            identificador,
            visitas_fallidas_user,
            visitas_fallidas_time,
            observaciones)
            SELECT
            '@num_visitas',
            CASE WHEN to_date('@fecha1','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha1','DD/MM/YYYY') END,
            CASE WHEN to_date('@fecha2','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha2','DD/MM/YYYY') END, 
            CASE WHEN to_date('@fecha3','DD/MM/YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha3','DD/MM/YYYY') END,  
            '@identificador',
            '@user',
            current_timestamp,
            '@observaciones'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="aprobacion_sig">
        <sql>
            WITH 
            sel as (
            Select identificador from aprobacion_sig where identificador='@identificador'
            ),
            upd as(
            UPDATE aprobacion_sig
            SET 	
            identificador= '@identificador',
            concepto='@concepto',
            aprobacion_sig_upd_user='@user',
            aprobacion_sig_upd_time=current_timestamp,
            observaciones='@observaciones'
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO aprobacion_sig(
            identificador,
            concepto,
            aprobacion_sig_user,
            aprobacion_sig_time,
            observaciones)
            SELECT
            '@identificador',
            '@concepto',
            '@user',
            current_timestamp,
            '@observaciones'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>  
    
    
    <Consulta id="visita_fallida_get">
        <sql>
            select identificador, num_visitas_fallidas, to_char( fecha1, 'DD/MM/YYYY') as fecha1,to_char( fecha2, 'DD/MM/YYYY') as fecha2,to_char( fecha3, 'DD/MM/YYYY') as fecha3,observaciones from visitas_fallidas where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="num_alertas">
        <sql>
            select *,
            (select desc_actividad from procesos.tipo_actividad  where  id_actividad=pa.id_tipo_actividad)as form2,
            (select desc_actividad from procesos.tipo_actividad  where  id_actividad=pa.actividad_padre) as form1,
            (select descripcion_tarea from procesos.tipo_actividad  where  id_actividad=pa.id_tipo_actividad)as des1,
            (select descripcion_tarea from procesos.tipo_actividad  where  id_actividad=pa.actividad_padre) as des2
            from procesos.actividad pa 
            inner join procesos.proceso pp on pa.id_proceso= pp.id_proceso 
            inner join procesos.tipo_actividad pt on pt.id_actividad=pa.id_tipo_actividad 
            inner join procesos.estado_proceso pe on pe.id_estado_proceso=pa.estado 
            inner join public.usuario pu on pu.usuario_id=pa.creado_por 
            inner join public.definitiva df on df."IDENTIFICADOR"=pp.identificador 
            where asignado_a='@id_user' and pa.estado in(1,3) order by fecha_asignacion asc;           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_nom_ben">
        <sql>
            select "Nombre 1" from definitiva where "IDENTIFICADOR" like '10006-4-2005'; 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_foto">
        <sql>
            select foto from usuario where usuario_id=@id_user;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="post_foto">
        <sql>
            update usuario set foto='@img_src' where usuario_id=@id_user;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="save_est">
        <sql>
        
            WITH 
            sel as (
            Select identificador from procesos.est_documentos where identificador='@identificador' limit 1
            ),
            upd as(
            UPDATE procesos.est_documentos
            SET 
            tipo_estudio='@tipo_estudio',
            fecha_est=CASE WHEN to_date('@fecha_est','DD MM YYYY') = '01-01-1111' THEN NULL ELSE to_date('@fecha_est','DD MM YYYY') END, 
            lin_nor_est='@lin_nor_est',	
            lin_sur_est='@lin_sur_est',
            lin_ori_est='@lin_ori_est',
            lin_occ_est='@lin_occ_est',
            identificador= '@identificador',
            tradicion= '@tradicion_est',
            tipo_doc= '@tipo_doc_est',
            nro_doc= '@nro_doc_est',
            notaria= '@notaria_est',
            fecha_doc=CASE WHEN to_date('@fecha_doc_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_doc_est','YYYY MM DD') END, 
            nom_vendedor= '@nom_vendedor_est',
            matricula_inm= '@matricula_inm_est',
            fecha_clt=CASE WHEN to_date('@fecha_clt_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_clt_est','YYYY MM DD') END,
            turno_clt_est= '@turno_clt_est',
            fotocopia_cedula= '@fotocopia_cedula_est',
            certificado_tra= '@certificado_tra_est',
            escritura_publica= '@escritura_publica_est',
            servicios_publicos= '@servicios_publicos_est',
            promesa_compraventa= '@promesa_compraventa_est',
            declaracion_extrajuicio= '@declaracion_extrajuicio_est',
            boletin_catastral= '@boletin_catastral_est',
            cert_comunal= '@cert_comunal_est',
            certificado_nomen= '@certificado_nomen_est',
            avaluo_nro= '@avaluo_nro_est',
            fecha_avaluo=CASE WHEN to_date('@fecha_avaluo_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_avaluo_est','YYYY MM DD') END,
            obs_est= '@obs_est',
            afec_vivienda= '@afec_vivienda_est',
            patri_familia= '@patri_familia_est',
            servidumbre= '@servidumbre_est',
            afect_ambiental= '@afect_ambiental_est',
            embargo= '@embargo_est',
            sucesion= '@sucesion_est',
            cond_resolutoria= '@cond_resolutoria_est',
            hipoteca= '@hipoteca_est',
            usufructo= '@usufructo_est',
            cabida_linderos= '@cabida_linderos_est',
            procede= '@procede_est',
            tenencia= '@tenencia_est',
            elaboro=@elaboro
            
            WHERE identificador=(select identificador from sel) and tipo_estudio='@tipo_estudio'
            returning identificador
            ),ins as(
            INSERT INTO procesos.est_documentos(
            tipo_estudio,
            fecha_est,
            lin_nor_est,
            lin_sur_est,
            lin_ori_est,
            lin_occ_est,
            identificador,
            tradicion,
            tipo_doc,
            nro_doc,
            notaria,
            fecha_doc,
            nom_vendedor,
            matricula_inm,
            fecha_clt,
            turno_clt_est,
            fotocopia_cedula,
            certificado_tra,
            escritura_publica,
            servicios_publicos,
            promesa_compraventa,
            declaracion_extrajuicio,
            boletin_catastral,
            cert_comunal,
            certificado_nomen,
            avaluo_nro,
            fecha_avaluo,
            obs_est,
            afec_vivienda,
            patri_familia,
            servidumbre,
            afect_ambiental,
            embargo,
            sucesion,
            cond_resolutoria,
            hipoteca,
            usufructo,
            cabida_linderos,
            procede,
            tenencia,
            elaboro)
            SELECT
            '@tipo_estudio',
            CASE WHEN to_date('@fecha_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_est','YYYY MM DD') END, 
            '@lin_nor_est',	
            '@lin_sur_est',
            '@lin_ori_est',
            '@lin_occ_est',
            '@identificador',
            '@tradicion_est',
            '@tipo_doc_est',
            '@nro_doc_est',
            '@notaria_est',
            CASE WHEN to_date('@fecha_doc_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_doc_est','YYYY MM DD') END,
            '@nom_vendedor_est',
            '@matricula_inm_est',
            CASE WHEN to_date('@fecha_clt_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_clt_est','YYYY MM DD') END,
            '@turno_clt_est',
            '@fotocopia_cedula_est',
            '@certificado_tra_est',
            '@escritura_publica_est',
            '@servicios_publicos_est',
            '@promesa_compraventa_est',
            '@declaracion_extrajuicio_est',
            '@boletin_catastral_est',
            '@cert_comunal_est',
            '@certificado_nomen_est',
            '@avaluo_nro_est',
            CASE WHEN to_date('@fecha_avaluo_est','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_avaluo_est','YYYY MM DD') END,
            '@obs_est',
            '@afec_vivienda_est',
            '@patri_familia_est',
            '@servidumbre_est',
            '@afect_ambiental_est',
            '@embargo_est',
            '@sucesion_est',
            '@cond_resolutoria_est',
            '@hipoteca_est',
            '@usufructo_est',
            '@cabida_linderos_est',
            '@procede_est',
            '@tenencia_est',
            @elaboro
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins          
        
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_dat_form_inmobiliaria">
        <sql> 
            select * from definitiva where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="save_resolucion">
        <sql> 
            with upd as(
            update procesos.resolucion set ced_expedida='@ced_exp_res', tipo_resolucion='@tipo_res',tipo_beneficiario='@tipo_ben_res',
            disp_presupuestal='@disp_pres_res',fecha_presupuesto='@fecha_dis_res',vur='@vur_res',obs_resolucion='@obs_res'
            where identificador='@identificador'
            returning identificador
            )
            select 1 from upd
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="aprobar_resolucion">
        <sql> 
            
            update procesos.est_documentos set cerrado=true, 
            aprobo=@aprobo,
            revisado=(select usuario_nombre from usuario where usuario_id=@realizo),
            aprobado=(select usuario_nombre from usuario where usuario_id=@aprobo)
            where identificador='@identificador' and tipo_estudio='@tipo_estudio';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="aprobar_resolucion_vereditas">
        <sql> 
            update procesos.resolucion_vur set cerrado=true, aprobo=@aprobo where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>

    <Consulta id="nombre_aprobo_res">
        <sql> 
            select usuario_nombre from usuario where usuario_id=(select aprobo from procesos.est_documentos where identificador='@identificador' and tipo_estudio='@tipo_estudio');
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="envio_notificaciones">
        <sql>
          
            with s as (
            SELECT identificador FROM procesos.proceso WHERE identificador = '@identificador' and id_tipo_proceso=@tipo_proceso
            ), i as (
            insert into procesos.proceso
            (id_tipo_proceso,identificador) 
            select @tipo_proceso,'@identificador'
            WHERE NOT EXISTS (select 1 from s)
            returning identificador
            )
            select identificador
            from i
            union all
            select identificador
            from s;
            
            insert into procesos.actividad(
            id_actividad,
            id_proceso,
            id_tipo_actividad,
            actividad_padre,
            creado_por,
            asignado_a,
            fecha_creacion,
            fecha_cierre,
            estado,
            observacion_inicial,
            observacion_final) 
            values (
            default,
            (select id_proceso from procesos.proceso where identificador='@identificador' and id_tipo_proceso=@tipo_proceso limit 1),
            @tipo_actividad,
            @actividad_padre,
            @creador,
            @asignado_a,
            '@fecha_creacion',
            null,
            @estado,
            '@observacion_inicial',
            '@observacion_final'
            ); 
            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
 
    <Consulta id="env_alerta_res">
        <sql>
            insert into procesos.proceso (id_tipo_proceso,identificador) values(1,'@identificador');
            insert into procesos.actividad(id_actividad,id_proceso,id_tipo_actividad,actividad_padre,creado_por,asignado_a,fecha_creacion,fecha_asignacion,fecha_recordatorio,fecha_cierre,
            estado,observacion_inicial,observacion_final) values (default,(select id_proceso from procesos.proceso where identificador='@identificador' limit 1),3,1,152,152,'2017-09-05','2017-09-06','2017-09-10','2017-09-20',1,'Envio urgente','');        
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="env_alerta_seleccion_vivienda_cruce_cedula">
        <sql>
            insert into procesos.proceso (id_tipo_proceso,identificador) values(2,'@identificador');
            insert into procesos.actividad(id_actividad,id_proceso,id_tipo_actividad,actividad_padre,creado_por,asignado_a,fecha_creacion,fecha_asignacion,fecha_recordatorio,fecha_cierre,
            estado,observacion_inicial,observacion_final) values (default,(select id_proceso from procesos.proceso where identificador='@identificador' limit 1),4,2,'@asignado_por',152,current_timestamp,current_timestamp,null,null,1,'Envio para cruce de cédulas','');
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="insertar_aprobacion_est">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_est_documentos
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,tipo_estudio='@tipo_estudio',consecutivo=@consecutivo,estado=@estado,fecha=current_timestamp                
            WHERE identificador='@id' and tipo_estudio='@tipo_estudio'
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_est_documentos(identificador,tipo_estudio,consecutivo,elaboro,aprobo, concepto, estado,fecha)
            SELECT '@id','@tipo_estudio','@consecutivo','@elaboro','@aprobo','@concepto','@estado',current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins; 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>

    <Consulta id="get_estado_aprobacion">
        <sql>
            select * from procesos.aprob_est_documentos where identificador='@id' and estado=1;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>   
    
    
    <Consulta id="insertar_aprobacion_resolucion">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_resolucion
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs'              
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_resolucion(identificador,elaboro,aprobo, concepto,obs)
            SELECT '@id' ,'@elaboro','@aprobo','@concepto','@obs'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="insertar_aprobacion_resolucion_reas">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_resolucion
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs',aprob_juridica='@aprob_juridica'              
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_resolucion(identificador,elaboro,aprobo, concepto,obs,aprob_juridica)
            SELECT '@id' ,'@elaboro','@aprobo','@concepto','@obs','@aprob_juridica'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="insertar_aprobacion_acta_cierre">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_acta_cierre_est_documentos
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs'              
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_acta_cierre_est_documentos(identificador,elaboro,aprobo, concepto,obs)
            SELECT '@id' ,'@elaboro','@aprobo','@concepto','@obs'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>

    <Consulta id="insertar_aprobacion_adenda">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_adenda
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs',fecha_aprobacion=current_timestamp              
            WHERE identificador=(select identificador from sel) and consecutivo=(select max(consecutivo) from procesos.aprob_adenda where identificador='@id' and tipo_estudio='@tipo_estudio') and concepto=false and tipo_estudio='@tipo_estudio'
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_adenda(identificador,elaboro,aprobo, concepto,obs,consecutivo,tipo_estudio,fecha_aprobacion)
            SELECT '@id' ,'@elaboro','@aprobo',@concepto,'@obs',(select coalesce(max(consecutivo)+1,1) from procesos.aprob_adenda where identificador='@id' and tipo_estudio='@tipo_estudio'),'@tipo_estudio',current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    <Consulta id="insertar_aprobacion_adenda_estado">
        <sql>
            
            update procesos.adenda set estado=@estado where identificador = '@id' and tipo_estudio ='@tipo_estudio'

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 

    <Consulta id="insertar_aprobacion_adenda_nombres">
        <sql>
           
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE procesos.adenda
            SET 	
            elaboro='@elaboro',aprobo='@aprobo'          
            WHERE identificador=(select identificador from sel) and consecutivo=(select max(consecutivo) from procesos.adenda where identificador='@id' and tipo_estudio='@tipo_estudio') and tipo_estudio='@tipo_estudio'
            returning identificador
            )
            select * from upd            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 

    <Consulta id="insertar_aprobacion_financiera">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_financiera
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs'              
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_financiera(identificador,elaboro,aprobo, concepto,obs)
            SELECT '@id' ,'@elaboro','@aprobo','@concepto','@obs'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="insertar_aprobacion_acta_entrega">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_acta_entrega
            SET 	
            elaboro='@elaboro',aprobo='@aprobo',concepto=@concepto,obs='@obs'              
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_acta_entrega(identificador,elaboro,aprobo, concepto,obs)
            SELECT '@id' ,'@elaboro','@aprobo','@concepto','@obs'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="actualizar_estado_acta_entrega">
        <sql>
            update acta_entrega set cerrado=true where identificador='@id'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="insertar_observaciones_est">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@id' 
            ),
            upd as(
            UPDATE	procesos.aprob_est_documentos
            SET 	
            obs='@obs'                  
            WHERE identificador=(select identificador from sel) and tipo_estudio='@tipo_estudio' and consecutivo=@consecutivo
            returning identificador
            ),ins as(
            INSERT INTO procesos.aprob_est_documentos(identificador,tipo_estudio,consecutivo,estado,obs)
            SELECT '@id','@tipo_estudio',@consecutivo,@estado,'@obs'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="obtener_observaciones_est">
        <sql>
            select obs from procesos.aprob_est_documentos where identificador='@id' and estado=1;  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_estudio_aprobado">
        <sql>
            select * from procesos.aprob_est_documentos where identificador='@id' order by tipo_estudio desc limit 1;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_financiera_aprobado">
        <sql>
            select * from procesos.aprob_financiera where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_resolucion_aprobado">
        <sql>
            select * from procesos.aprob_resolucion where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_acta_cierre_aprobado">
        <sql>
            select * from procesos.aprob_acta_cierre_est_documentos where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="consulta_fichaTecnica_aprobado">
        <sql>
            select nom_ela as elaboro,nom_rev as aprobo,'nada' as obs,revisado as concepto from ficha_reconocimiento_v1 where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    

    <Consulta id="consulta_adenda_aprobado">
        <sql>
            select * 
            from procesos.aprob_adenda 
            where identificador='@id' and tipo_estudio='255' and consecutivo=(
            select max(consecutivo) as consecutivo from procesos.aprob_adenda where identificador='@id');
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_adenda_aprobado_511">
        <sql>
            select * 
            from procesos.aprob_adenda 
            where identificador='@id' and tipo_estudio='511' and consecutivo=(
            select max(consecutivo) as consecutivo from procesos.aprob_adenda where identificador='@id');
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_aprobacion_ficha_social">
        <sql>
            select * 
            from fichasocial.aprobacion where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="consulta_adenda_aprobado_sistema">
        <sql>
            select * 
            from procesos.aprob_adenda 
            where identificador='@id' and consecutivo='@consecutivo';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="consulta_acta_entrega_aprobado">
        <sql>
            select * from procesos.aprob_acta_entrega where identificador='@id';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="estado_lista_chequeo">
        <sql>
            select id_tipo_actividad,creado_por,asignado_a ,
            (select usuario_nombre from usuario where usuario_id=pa.creado_por)as nom_creador,
            (select usuario_nombre from usuario where usuario_id=pa.asignado_a) as nom_asignado
            from procesos.proceso pp
            inner join procesos.actividad pa on pa.id_proceso=pp.id_proceso
            where identificador='@id' 
            and actividad_padre=@act
            order by id_actividad desc limit 1;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
     <Consulta id="elaborar_lista_chequeo_511">
        <sql>
            select procede from procesos.est_documentos where identificador='@identificador' and tipo_estudio='255'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
   
    <Consulta id="lista_tareas_funcionarios">
        <sql>

            select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (0) as cta_res,
            (0) as cta_est,
            (0) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id
            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where us.tius_id in (70) and usuario_id!=273 and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id
            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id;  
                  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="listado_funcionarios_aprobacion_est_documentos">
        <sql>
            select 
            usuario_nombre,
            (0) as cta_res,
            (0) as cta_est,
            (0) as cta_rev,
            u.usuario_id 
            from usuario u 
            inner join (select * from usuario_funcionalidad where tifunc_id=24) as sub1 
            on u.usuario_id=sub1.usuario_id where u.usuario_fecha_vigencia > now()         
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="listado_funcionarios_elaboracion_est_documentos">
        <sql>
            select 
            usuario_nombre,
            (0) as cta_res,
            (0) as cta_est,
            (0) as cta_rev,
            usuario_id 
            from usuario u 
            where u.usuario_fecha_vigencia > now() and u.tius_id in (70) 
            and  usuario_id  
            not in (select usuario_id from usuario_funcionalidad where tifunc_id=24)        
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>    
    
    <Consulta id="lista_tareas_funcionarios_vereditas">
        <sql>
            select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (select count(id_tipo_actividad) as cta_res from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=3 and estado=1) as cta_res,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=2 and estado=1) as cta_est,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=6 and estado=1) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id

            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where us.tius_id in (40) and usuario_id!=168 and usuario_cargo like '%Vereditas%' and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id

            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id;  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="lista_tareas_aprobacion_cartografia">
        <sql>
            select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (select count(id_tipo_actividad) as cta_res from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=15 and estado=1) as cta_res,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=2 and estado=1) as cta_est,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=6 and estado=1) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id

            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where usuario_id=250 and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id

            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id; 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>    
    <Consulta id="lista_tareas_financiera_vereditas">
        <sql>
            select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (select count(id_tipo_actividad) as cta_res from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=3 and estado=1) as cta_res,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=2 and estado=1) as cta_est,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=6 and estado=1) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id

            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where us.tius_id in (90) and usuario_id!=16 and usuario_cargo like '%Vereditas%' and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id

            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id;  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="lista_tareas_tecnico_vereditas">
        <sql>
            select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (select count(id_tipo_actividad) as cta_res from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=3 and estado=1) as cta_res,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=2 and estado=1) as cta_est,
            (select count(id_tipo_actividad) as cta_est from procesos.actividad as spa where pa.asignado_a=spa.asignado_a and id_tipo_actividad=6 and estado=1) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id

            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where us.tius_id in (30) and usuario_id!=196 and usuario_cargo like '%Vereditas%' and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id

            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id;  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="lista_tareas_est_doc_caracoli">
        <sql>
        select     
            usuario_nombre,
            us.usuario_id,
            asignado_a,
            tab_user.tius_id,
            (0) as cta_res,
            (0) as cta_est,
            (0) as cta_rev
            from public.usuario as us
            left join 
            procesos.actividad as pa 
            on pa.asignado_a=us.usuario_id

            inner join (
            select us.usuario_id,tp.tius_id from usuario as us 
            inner join tipo_usuario as tp on us.tius_id=tp.tius_id
            inner join tipo_usuario_funcionalidad as uf on uf.tius_id=tp.tius_id
            inner join tipo_funcionalidad as tf on uf.tifunc_id=tf.tifunc_id
            where us.tius_id in (70) and usuario_cargo like '%Caracoli%' and us.usuario_fecha_vigencia > now()) as tab_user on us.usuario_id=tab_user.usuario_id

            group by asignado_a, cta_res,cta_est,cta_rev, usuario_nombre,us.usuario_id,tab_user.tius_id;     
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="lista_tareas_social_reas">
        <sql>
                select 
                usuario_nombre,
                (0) as cta_res,
                (0) as cta_est,
                (0) as cta_rev,
                u.usuario_id 
                from usuario u 
                inner join (select * from usuario_funcionalidad where tifunc_id=72 and usuario_id !=117) as sub1 
                on u.usuario_id=sub1.usuario_id where u.usuario_fecha_vigencia > now()  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="quitar_tarea_lider">
        <sql>                       
            update procesos.actividad set estado=2,fecha_cierre=current_timestamp where id_actividad=@id_act;                  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="env_alerta_regreso">
        <sql>
                       
            insert into procesos.actividad(
            id_actividad,
            id_proceso,
            id_tipo_actividad,
            actividad_padre,
            creado_por,
            asignado_a,
            fecha_creacion,
            fecha_cierre,
            estado,
            observacion_inicial,
            observacion_final) 
            values (
            default,
            @tipo_proceso,
            5,
            @actividad_padre,
            @creador,
            @asignado_a,
            current_timestamp ,
            current_timestamp ,
            1,
            '@observacion_inicial',
            '@observacion_final'
            ); 
            
            update procesos.actividad set estado=2,fecha_cierre=current_timestamp where id_actividad=@id_act
            
                  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_datos_regreso">
        <sql>
            select usuario_id,usuario_nombre,usuario_contrato from usuario where usuario_id=REGEXP_REPLACE(COALESCE('@id', '0'), '[^0-9]*' ,'0')::integer or usuario_usuario='@id'; 
                  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_sector">
        <sql>
            select "Sector" from definitiva where "IDENTIFICADOR"='@id';     
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_usuario_tarea">
        <sql>
            select usuario_id from usuario_funcionalidad where tifunc_id=@tifunc limit 1;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>   
 
    <Consulta id="get_dat_est_doc1">
        <sql>
            with ins as(
            insert into procesos.est_documentos (identificador,tipo_estudio,consecutivo) 
            select '@identificador','@estudio',1
            where not exists (select identificador from procesos.est_documentos where identificador='@identificador' and tipo_estudio='@estudio')
            returning identificador
            ), sel as(
            select *,
            (select elaboro from procesos.aprob_est_documentos where identificador='@identificador' and tipo_estudio='@estudio')as elaboro_estudio,
            (select cuenta as cuenta_cod from servicio_publico where identificador='@identificador' and consecutivo=1 and tipo_servicio='energia'),
            (select estado as estado_cod from servicio_publico where identificador='@identificador' and consecutivo=1 and tipo_servicio='energia'),
            (select cuenta as cuenta_acu from servicio_publico where identificador='@identificador' and consecutivo=1 and tipo_servicio='acueducto'),
            (select estado as estado_acu from servicio_publico where identificador='@identificador' and consecutivo=1 and tipo_servicio='acueducto'),
            (select STRING_AGG(concat,', ')as texto from (
            select identificador,concat_ws(' del ',concepto_ingreso,fecha_concepto)as concat
            from concepto_ingreso 
            where identificador= '@identificador') as sub1
            group by identificador)
            from definitiva df left join ficha_reconocimiento_v1 fr on df."IDENTIFICADOR"=fr.identificador 
            inner join procesos.est_documentos pe on pe.identificador=df."IDENTIFICADOR" where df."IDENTIFICADOR"='@identificador' and pe.tipo_estudio='@estudio'
            )
            select * from sel
      
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_dat_est_doc_user">
        <sql>
            select usuario_nombre,usuario_correo,cerrado from procesos.est_documentos ed
            inner join usuario us on us.usuario_id=ed.elaboro
            where identificador='@identificador'      
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_resolucion_existe">
        <sql>
            select identificador from financiera_reas.cdp_rp
            where identificador='@identificador'      
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_dat_aprobacion_sig">
        <sql>
            select "Dirección" as direccion,"MZ" as manzana,"LT" as lote,"Código Chip Catastro" as chip from definitiva where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_dat_list_cheq">
        <sql>
        
            with ins as(
            insert into procesos.lista_chequeo (identificador,tipo_estudio) 
            select '@identificador','@tipo_estudio'            
            where not exists (select identificador from procesos.lista_chequeo where identificador='@identificador' and tipo_estudio='@tipo_estudio')
            returning identificador
            ), sel as(
            select * from definitiva df inner join procesos.lista_chequeo pe on pe.identificador=df."IDENTIFICADOR" where df."IDENTIFICADOR"='@identificador' and pe.tipo_estudio='@tipo_estudio'
            )
            select * from sel
            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_dat_resolucion">
        <sql>
            
            with ins as(
            insert into procesos.resolucion (identificador) select '@identificador'
            where not exists (select identificador from procesos.resolucion where identificador='@identificador')
            returning identificador
            ), sel as(
            select * from definitiva df 
            inner join procesos.resolucion pr on df."IDENTIFICADOR"=pr.identificador 
            where df."IDENTIFICADOR"='@identificador'
            )
            select * from sel

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="datos_acta_entrega_par">
        <sql>
            select *,
            (select usuario_nombre from usuario where usuario_usuario='@usuario_usuario'),
            (select usuario_contrato from usuario where usuario_usuario='@usuario_usuario'),
            (select usuario_nombre from usuario where usuario_usuario=ae.acta_entrega_user) as usuario_nombre1,
            (select usuario_contrato from usuario where usuario_usuario=ae.acta_entrega_user) as usuario_contrato1 from definitiva df
            INNER JOIN ficha_reconocimiento_v1 fr on df."IDENTIFICADOR"=fr.identificador
            LEFT JOIN acta_entrega ae on df."IDENTIFICADOR"=ae.identificador
            where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="datos_acta_entrega_par_vereditas">
        <sql>
            select ae.*,pac.*,"Nombre 1" as nombre_beneficiario,"Cedula 1" as cedula from definitiva df  left join acta_entrega ae on df."IDENTIFICADOR"=ae.identificador
            left join procesos.aprob_acta_entrega pac on ae.identificador=pac.identificador
            where df."IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="datos_resolucion_vereditas">
        <sql>
            select *
            from procesos.resolucion_vur rv left join procesos.aprob_resolucion ar on rv.identificador=ar.identificador
            where rv.identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="datos_resolucion">
        <sql>
        select rv.*,ar.*,df.*,"Cedula 1" as cedula, "Nombre 1" as nom_ben,
	(select fecha_est from procesos.est_documentos where identificador ='@identificador' and procede='Si'),
        (select string_agg(folio_est_documentos, ', ')as folio_est_documentos from procesos.lista_chequeo where identificador ='@identificador'),
        (select zona from ficha_reconocimiento_v1 where identificador ='@identificador'),
        (select concepto from procesos.aprob_resolucion where identificador='@identificador'),
        (select elaboro from procesos.aprob_resolucion where identificador='@identificador'),
        (select aprobo from procesos.aprob_resolucion where identificador='@identificador'),
        (select aprob_juridica from procesos.aprob_resolucion where identificador='@identificador'),
        (select dir_campo from ficha_reconocimiento_v1 where identificador='@identificador'),
        (select dir_cat from ficha_reconocimiento_v1 where identificador='@identificador'),
        (select no_radicado from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select fecha_radicado from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select fecha_acta from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select fecha_seleccion from gestion_inmobiliaria.seleccion_vivienda where identificador ='@identificador'),
        (select beneficiario_resolucion_especie from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select fecha_afirmacion from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select tipo_notificacion from caracoli.caracoli where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador')),
        (select folio_plenario from gestion_inmobiliaria.seleccion_vivienda where identificador='@identificador'), 
        (select fecha_plenario from gestion_inmobiliaria.seleccion_vivienda where identificador='@identificador'),
        (select rad_contructora from gestion_inmobiliaria.seleccion_vivienda where identificador='@identificador')                
	from definitiva df
	left join financiera_reas.cdp_rp rv 
	on df."IDENTIFICADOR"=rv.identificador
	left join financiera_reas.asignaciones_resoluciones ar 
	on rv.identificador=ar.identificador
	where df."IDENTIFICADOR"='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="juridicos_resolucion">
        <sql>

        select * from financiera_reas.juridicos;

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
       <Consulta id="save_resolucion_VUR">
        <sql>
            
        WITH 
        sel as (
        Select identificador from financiera_reas.cdp_rp where identificador='@identificador' 
        ),
        upd as(
        UPDATE financiera_reas.cdp_rp
        SET 	
        conse=1,
        no_resol= CASE WHEN @no_resol=-1 THEN NULL ELSE @no_resol END ,
        fecha_resol=CASE WHEN to_date('@fecha_resol','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_resol','DD MM YYYY') END,
        no_cdp=CASE WHEN @no_cdp=-1 THEN NULL ELSE @no_cdp END ,
        fecha_cdp=CASE WHEN to_date('@fecha_cdp','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_cdp','DD MM YYYY') END,
        objeto_cdp='@objeto_cdp',
        valor_cdp=CASE WHEN @valor_cdp=-1 THEN NULL ELSE @valor_cdp END 
        WHERE identificador=(select identificador from sel)
        returning identificador
        ),ins as(
        INSERT INTO financiera_reas.cdp_rp(identificador,conse,no_resol,fecha_resol,no_cdp,fecha_cdp,objeto_cdp,valor_cdp)
        SELECT '@identificador',1,CASE WHEN @no_resol=-1 THEN NULL ELSE @no_resol END,
            CASE WHEN to_date('@fecha_resol','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_resol','DD MM YYYY') END,
            CASE WHEN @no_cdp=-1 THEN NULL ELSE @no_cdp END ,
            CASE WHEN to_date('@fecha_cdp','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_cdp','DD MM YYYY') END,
            '@objeto_cdp',
            CASE WHEN @valor_cdp=-1 THEN NULL ELSE @valor_cdp END 
        WHERE NOT EXISTS (select 1 from upd )
        returning identificador	
        )
        select * from upd union select * from ins;
            
        update procesos.lista_chequeo set folio_est_documentos='@folio_est_documentos' where identificador='@identificador';  
            
        update ficha_reconocimiento_v1 set zona = '@zona' where identificador='@identificador';  
    
        update caracoli.caracoli set no_radicado='@no_radicado' where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador');
  
        update caracoli.caracoli set fecha_radicado=CASE WHEN to_date('@fecha_radicado','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_radicado','DD MM YYYY') END where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador');
            
        update caracoli.caracoli set beneficiario_resolucion_especie='@beneficiario_resolucion_especie' where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador');
        
        update caracoli.caracoli set tipo_notificacion='@tipo_notificacion' where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador');
        
        update caracoli.caracoli set fecha_afirmacion=CASE WHEN to_date('@fecha_afirmacion','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_afirmacion','DD MM YYYY') END where num_sdh=(select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR" ='@identificador');
        
                
                     
            
        WITH 
        sel as (
        Select identificador from financiera_reas.asignaciones_resoluciones where identificador='@identificador' 
        ),
        upd as(
        UPDATE financiera_reas.asignaciones_resoluciones
        SET 	
        conse=1,
        vigencia=2019,
        no_resol=CASE WHEN @no_resol=-1 THEN NULL ELSE @no_resol END ,
        fecha_resol=CASE WHEN to_date('@fecha_resol','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_resol','DD MM YYYY') END,
        valor_resol=CASE WHEN @valor_resol=-1 THEN NULL ELSE @valor_resol END ,
        tipo_resol='@tipo_resol'
        WHERE identificador=(select identificador from sel)
        returning identificador
        ),ins as(
        INSERT INTO financiera_reas.asignaciones_resoluciones(identificador,conse,vigencia,no_resol,fecha_resol,valor_resol,tipo_resol)
        SELECT '@identificador',1,2019,CASE WHEN @no_resol=-1 THEN NULL ELSE @no_resol END ,
            CASE WHEN to_date('@fecha_resol','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_resol','DD MM YYYY') END,
            CASE WHEN @valor_resol=-1 THEN NULL ELSE @valor_resol END ,
            '@tipo_resol'
        WHERE NOT EXISTS (select 1 from upd )
        returning identificador	
        )
        select * from upd union select * from ins;    

        WITH 
        sel as (
        Select identificador from procesos.aprob_resolucion where identificador='@identificador' 
        ),
        upd as(
        UPDATE procesos.aprob_resolucion
        SET 	
        elaboro='@usuario_nombre'
        WHERE identificador=(select identificador from sel)
        returning identificador
        ),ins as(
        INSERT INTO procesos.aprob_resolucion(identificador,elaboro)
        SELECT '@identificador','@usuario_nombre'
        WHERE NOT EXISTS (select 1 from upd )
        returning identificador	
        )
        select * from upd union select * from ins;   
            
       
                 
       WITH 
        sel as (
        Select identificador from gestion_inmobiliaria.seleccion_vivienda where identificador='@identificador' 
        ),
        upd as(
        UPDATE gestion_inmobiliaria.seleccion_vivienda
        SET 	
        folio_plenario=NULLIF('@folio_plenario', '')::int,
        fecha_plenario=CASE WHEN to_date('@fecha_plenario','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_plenario','DD MM YYYY') END    
        WHERE identificador=(select identificador from sel)
        returning identificador
        ),ins as(
        INSERT INTO gestion_inmobiliaria.seleccion_vivienda(identificador,folio_plenario,fecha_plenario)
        SELECT 
            '@identificador',
            NULLIF('@folio_plenario', '')::int,
            CASE WHEN to_date('@fecha_plenario','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_plenario','DD MM YYYY') END
        WHERE NOT EXISTS (select 1 from upd )
        returning identificador	
        )
        select * from upd union select * from ins;         
            
               
            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    

    <Consulta id="datos_acta_cierre_est_documentos">
        <sql>
            select *
            from procesos.acta_cierre_est_documentos ac 
            left join procesos.aprob_acta_cierre_est_documentos ap on ac.identificador=ap.identificador
            where ac.identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="ficha1">
        <sql>
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            fecha_elaboracion=CASE WHEN to_date('@fecha_elaboracion','YYYY MM DD') = '0001 01 01' THEN NULL ELSE to_date('@fecha_elaboracion','YYYY MM DD') END,
            nombre_visita_1='@nom3_1',
            nombre_visita_2='@nom3_2',
            nombre_visita_3='@ape3_1',
            nombre_visita_4='@ape3_2',
            nombre_visita= concat('@nom3_1',' ','@nom3_2',' ','@ape3_1',' ','@ape3_2'),
            cedula_visita='@cedula_visita',
            parentesco='@parentesco',
            telefono1='@telefono1',
            telefono2='@telefono2'                 
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(identificador,fecha_elaboracion,nombre_visita,nombre_visita_1,nombre_visita_2,nombre_visita_3,nombre_visita_4,cedula_visita,parentesco,telefono1,telefono2)
            SELECT '@identificador','@fecha_elaboracion',concat('@nom3_1',' ','@nom3_2',' ','@ape3_1',' ','@ape3_2'),'@nom3_1','@nom3_2','@ape3_1','@ape3_2','@cedula_visita','@parentesco','@telefono1','@telefono2' 
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha1_1">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"='@identificador' 
            ),
            upd as(
            UPDATE	definitiva
            SET 	
            "1er_Apellido_Ben1"='@ape1_1',
            "2do_Apellido_Ben1" = '@ape1_2',
            "1er_Nombre_Ben1" = '@nom1_1',
            "2do_Nombre_Ben1" = '@nom1_2',
            "1er_Apellido_Ben2" = '@ape2_1',
            "2do_Apellido_Ben2" = '@ape2_2' ,
            "1er_Nombre_Ben2" = '@nom2_1' ,
            "2do_Nombre_Ben2" = '@nom2_2',
            "Cedula 1" = '@ced1',
            "Cedula 2" = '@ced2',
            "Nombre 1"= concat('@nom1_1',' ','@nom1_2',' ','@ape1_1',' ','@ape1_2'),
            "Nombre 2"= concat('@nom2_1',' ','@nom2_2',' ','@ape2_1',' ','@ape2_2'),
            contrato_upd_user='@user_upd',
            contrato_upd_time=current_timestamp        
            WHERE "IDENTIFICADOR"=(select "IDENTIFICADOR" from sel)
            returning "IDENTIFICADOR"
            )
            select * from upd;
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha1_upd_user">
        <sql>
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            ficha_reconocimiento_v1_upd_user='@usuario',
            ficha_reconocimiento_v1_upd_time=current_timestamp
                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            )
            select * from upd;
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="ficha_traer_user_upd">
        <sql>
        
            select usuario_nombre as nombre,ficha_reconocimiento_v1_upd_time as tiempo from ficha_reconocimiento_v1 as fr inner join usuario as us on fr.ficha_reconocimiento_v1_upd_user=us.usuario_usuario where identificador='@identificador';
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="ficha2">
        <sql>
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            
            dir_campo='@dir_campo',            
            dir_cat='@dir_cat',
            man_cat='@man_cat',
            lot_cat='@lot_cat',
            area_ter='@area_ter',
            area_con='@area_con',
            lin_nor='@lin_nor',
            lin_sur='@lin_sur',
            lin_ori='@lin_ori',
            lin_occ='@lin_occ',
            cord_x='@cord_x',
            cord_y='@cord_y',
            acu_dis='@acu_dis',
            acu_mod='@acu_mod',
            acu_con='@acu_con',
            acu_dir='@acu_dir',
            alc_dis='@alc_dis',
            alc_mod='@alc_mod',
            alc_con='@alc_con',
            alc_dir='@alc_dir',
            ase_dis='@ase_dis',
            ase_mod='@ase_mod',
            ase_con='@ase_con',
            ase_dir='@ase_dir',
            ene_dis='@ene_dis',
            ene_mod='@ene_mod',
            ene_con='@ene_con',
            ene_dir='@ene_dir',
            gas_dis='@gas_dis',
            gas_mod='@gas_mod',
            gas_con='@gas_con',
            gas_dir='@gas_dir',
            tel_dis='@tel_dis',
            tel_mod='@tel_mod',
            tel_con='@tel_con',
            tel_dir='@tel_dir'                                 
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            dir_campo,
            dir_cat,
            man_cat,
            lot_cat,
            area_ter,
            area_con,
            lin_nor,
            lin_sur,
            lin_ori,
            lin_occ,
            cord_x,
            cord_y,
            acu_dis,
            acu_mod,
            acu_con,
            acu_dir,
            alc_dis,
            alc_mod,
            alc_con,
            alc_dir,
            ase_dis,
            ase_mod,
            ase_con,
            ase_dir,
            ene_dis,
            ene_mod,
            ene_con,
            ene_dir,
            gas_dis,
            gas_mod,
            gas_con,
            gas_dir,
            tel_dis,
            tel_mod,
            tel_con,
            tel_dir)
            SELECT 
            '@dir_campo',
            '@dir_cat',
            '@man_cat',
            '@lot_cat',
            '@area_ter',
            '@area_con',
            '@lin_nor',
            '@lin_sur',
            '@lin_ori',
            '@lin_occ',
            '@cord_x',
            '@cord_y',
            '@acu_dis',
            '@acu_mod',
            '@acu_con',
            '@acu_dir',
            '@alc_dis',
            '@alc_mod',
            '@alc_con',
            '@alc_dir',
            '@ase_dis',
            '@ase_mod',
            '@ase_con',
            '@ase_dir',
            '@ene_dis',
            '@ene_mod',
            '@ene_con',
            '@ene_dir',
            '@gas_dis',
            '@gas_mod',
            '@gas_con',
            '@gas_dir',
            '@tel_dis',
            '@tel_mod',
            '@tel_con',
            '@tel_dir' 
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_chip">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"='@identificador' 
            ),
            upd as(
            UPDATE	definitiva
            SET 	
            "Código Chip Catastro"='@chip',
            contrato_upd_user='@user_upd',
            contrato_upd_time=current_timestamp        
            WHERE "IDENTIFICADOR"=(select "IDENTIFICADOR" from sel)
            returning "IDENTIFICADOR"
            )
            select * from upd;
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha2_1">
        <sql>
            
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"='@identificador' 
            ),
            upd as(
            UPDATE servicio_publico
            SET 	
            disponibilidad='@disponibilidad',
            modalidad='@modalidad',
            direccion='@direccion',
            cuenta='@cuenta'
            WHERE identificador=(select "IDENTIFICADOR" from sel) and consecutivo=1 and tipo_servicio='@tipo_servicio'
            returning identificador
            ),ins as(
            INSERT INTO servicio_publico(
            identificador,
            consecutivo,
            tipo_servicio,
            disponibilidad,
            modalidad,
            direccion,
            cuenta)
            SELECT 
            '@identificador',
            1,
            '@tipo_servicio',
            '@disponibilidad',
            '@modalidad',
            '@direccion',
            '@cuenta'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	)
            select * from upd;

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    
    
    <Consulta id="ficha_3">
        <sql>
           
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            tip_inm= '@tip_inm',
            num_pis= '@num_pis',
            unid_viv= '@unid_viv',
            est_con1= '@est_con1',
            est_con2= '@est_con2',
            etp_cons= '@etp_cons',
            uso_pred= '@uso_pred',
            cimen= '@cimen',
            estruct= '@estruct',
            mat_par= '@mat_par',
            mat_pis= '@mat_pis',
            mat_cub= '@mat_cub',
            est_cons= '@est_cons',
            num_hab= '@num_hab',
            num_gar= '@num_gar',
            num_san= '@num_san',
            num_loc= '@num_loc',
            num_coc= '@num_coc',
            num_bod= '@num_bod',
            num_lav= '@num_lav',
            num_pat= '@num_pat',
            esp_mul= '@esp_mul',
            zon_soc= '@zon_soc',
            cri_ani= '@cri_ani',
            coc_enc= '@coc_enc',
            coc_lav= '@coc_lav',
            coc_mes= '@coc_mes',
            coc_ind= '@coc_ind',
            san_enc= '@san_enc',
            san_duc= '@san_duc',
            san_apar= '@san_apar',
            san_des= '@san_des',
            san_poz= '@san_poz',
            san_lad= '@san_lad'                                
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            tip_inm,
            num_pis,
            unid_viv,
            est_con1,
            est_con2,
            etp_cons,
            uso_pred,
            cimen,
            estruct,
            mat_par,
            mat_pis,
            mat_cub,
            est_cons,
            num_hab,
            num_gar,
            num_san,
            num_loc,
            num_coc,
            num_bod,
            num_lav,
            num_pat,
            esp_mul,
            zon_soc,
            cri_ani,
            coc_enc,
            coc_lav,
            coc_mes,
            coc_ind,
            san_enc,
            san_duc,
            san_apar,
            san_des,
            san_poz,
            san_lad)
            SELECT 
            '@tip_inm',
            '@num_pis',
            '@unid_viv',
            '@est_con1',
            '@est_con2',
            '@etp_cons',
            '@uso_pred',
            '@cimen',
            '@estruct',
            '@mat_par',
            '@mat_pis',
            '@mat_cub',
            '@est_cons',
            '@num_hab',
            '@num_gar',
            '@num_san',
            '@num_loc',
            '@num_coc',
            '@num_bod',
            '@num_lav',
            '@num_pat',
            '@esp_mul',
            '@zon_soc',
            '@cri_ani',
            '@coc_enc',
            '@coc_lav',
            '@coc_mes',
            '@coc_ind',
            '@san_enc',
            '@san_duc',
            '@san_apar',
            '@san_des',
            '@san_poz',
            '@san_lad'
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins           
               
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    <Consulta id="ficha_4">
        <sql>

           
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            plano= '@plano',
            foto_plano='@foto_plano',
            foto_ubicacion='@foto_ubicacion'
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            plano,
            foto_plano,
            foto_ubicacion
            )
            SELECT 
            '@plano',
            '@foto_plano',
            '@foto_ubicacion'           
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>        
               
    <Consulta id="ficha_5">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_ext= '@img_ext',
            img_nom= '@img_nom',
            img_esp= '@img_esp',
            img_hab= '@img_hab',
            img_coc= '@img_coc',
            img_usa= '@img_usa'                                
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_ext,
            img_nom,
            img_esp,
            img_hab,
            img_coc,
            img_usa
            )
            SELECT 
            '@img_ext',
            '@img_nom',
            '@img_esp',
            '@img_hab',
            '@img_coc',
            '@img_usa' 
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_50">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_ext= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_ext
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_51">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_nom= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_nom
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_52">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_esp= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_esp
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_53">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_hab= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_hab
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_54">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_coc= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_coc
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_55">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            img_usa= '@img'
                                      
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            img_usa
            
            )
            SELECT 
            '@img'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="vere">
        <sql>
            select identificador
            from ficha_reconocimiento_v1 as fc
            inner join definitiva as df on df."IDENTIFICADOR" = fc.identificador and "Sector"='Vereditas' and identificador='@identificador' 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    
    <Consulta id="ficha_6">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            observ= '@observ',
            nom_ela= '@nom_ela',
            car_ela= '@car_ela',
            nom_rev= '@nom_rev',
            car_rev= '@car_rev'                                               
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO ficha_reconocimiento_v1(
            observ,
            nom_ela,
            car_ela,
            nom_rev,
            car_rev  
            )
            SELECT 
            '@observ',
            '@nom_ela',
            '@car_ela',
            '@nom_rev',
            '@car_rev' 
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="ficha_7">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            revisado= '@revisado',
            fecha_revisado= CURRENT_DATE,
            nom_rev='@usuario_nombre_revisa',
            car_rev='@usuario_contrato_revisa',
            usuario_que_revisa= '@usuario_que_revisa'                                             
            WHERE identificador=(select identificador from sel)
            returning identificador
            )
            select * from upd
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_8">
        <sql>
            
            WITH 
            sel as (
            Select identificador from ficha_reconocimiento_v1 where identificador='@identificador' 
            ),
            upd as(
            UPDATE	ficha_reconocimiento_v1
            SET 	
            revisado= null,
            fecha_revisado= null,
            nom_rev='@usuario_nombre_revisa',
            car_rev='@usuario_contrato_revisa',
            usuario_que_revisa= '@usuario_que_revisa'                                             
            WHERE identificador=(select identificador from sel)
            returning identificador
            )
            select * from upd
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="get_numero_ficha_tecnica">
        <sql>
            select "Num_Ficha_Tecnica" from "tbl_Enlace_SURR" where "Identificador"='@identificador'                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_numero_ficha_tecnica_vereditas">
        <sql>
            select "IDENTIFICA_ANTERIOR" from definitiva where "IDENTIFICADOR"='@identificador'                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="set_numero_ficha_tecnica">
        <sql>
            
            WITH 
            sel as (
            Select "Identificador" from "tbl_Enlace_SURR" where "Identificador"='@identificador' 
            ),upd as(
            UPDATE "tbl_Enlace_SURR"
            SET 	
            "Num_Ficha_Tecnica"='@ficha_num'
                                      
            WHERE "Identificador"=(select "Identificador" from sel)
            returning "Identificador"
            
            ),ins as(
            INSERT INTO "tbl_Enlace_SURR"(
            "Identificador",
            "Num_Ficha_Tecnica"            
            )
            SELECT 
            '@identificador',
            '@ficha_num'
            
            WHERE NOT EXISTS (select 1 from upd )
            returning "Identificador"	
            )
            select * from upd union select * from ins 
                
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    
            
    <Consulta id="buscar_ficha">
        <sql>

            WITH 

            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            identificador='@identificador'                
            WHERE identificador='@identificador'
            returning identificador
            ),
            ins as(
            INSERT INTO ficha_reconocimiento_v1(identificador,ficha_reconocimiento_v1_user,ficha_reconocimiento_v1_time)
            SELECT '@identificador','@usuario_nombre',current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            ),
            sel as (
            Select 
            "Nombre 1" as nombre_prin,
            "1er_Apellido_Ben1" as ape1_1,
            "2do_Apellido_Ben1" as ape1_2,
            "1er_Nombre_Ben1" as nom1_1,
            "2do_Nombre_Ben1" as nom1_2,
            "Cedula 1" as cedula_prin,
            "Nombre 2" as nombre_sec,
            "1er_Apellido_Ben2" as ape2_1,
            "2do_Apellido_Ben2" as ape2_2,
            "1er_Nombre_Ben2" as nom2_1,
            "2do_Nombre_Ben2" as nom2_2,
            "Cedula 2" as cedula_sec,
            "Localidad" as localidad,
            "UPZ" as upz,
            "Barrio" as barrio,
            "Dirección" as dir_reco,
            "MZ" as man_reco,
            "LT" as lot_reco,
            "Código Chip Catastro" as chip,
            "Sector" as sector,
            (SELECT array_to_string(array_agg(distinct concat(concepto_ingreso,' del ',to_char(fecha_concepto, 'DD/MM/YYYY'))),', ') from concepto_ingreso where identificador=ft.identificador) as con_ingreso,
            identificador,
            fecha_elaboracion,
            nombre_visita,
            nombre_visita_1 as nom3_1,
            nombre_visita_2 as nom3_2,
            nombre_visita_3 as ape3_1,
            nombre_visita_4 as ape3_2,
            cedula_visita,
            parentesco,
            telefono1,
            telefono2,		
            dir_campo,
            dir_cat,
            man_cat,
            lot_cat,
            area_con,
            lin_nor,
            lin_sur,
            lin_ori,
            lin_occ,
            cord_x,
            cord_y,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='acueducto')as acu_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='acueducto')as acu_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='acueducto')as acu_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='acueducto')as acu_dir,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='alcantarillado')as alc_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='alcantarillado')as alc_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='alcantarillado')as alc_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='alcantarillado')as alc_dir,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='aseo')as ase_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='aseo')as ase_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='aseo')as ase_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='aseo')as ase_dir,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='gas')as gas_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='gas')as gas_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='gas')as gas_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='gas')as gas_dir,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='telefono')as tel_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='telefono')as tel_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='telefono')as tel_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='telefono')as tel_dir,
            (SELECT disponibilidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='energia')as ene_dis,
            (SELECT modalidad from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='energia')as ene_mod,
            (SELECT cuenta from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='energia')as ene_con,
            (SELECT direccion from servicio_publico where identificador=ft.identificador and consecutivo=1 and tipo_servicio='energia')as ene_dir,
            area_ter,
            tip_inm,
            num_pis,
            unid_viv,
            est_con1,
            est_con2,
            etp_cons,
            uso_pred,
            cimen,
            estruct,
            mat_par,
            mat_pis,
            mat_cub,
            est_cons,
            num_hab,
            num_gar,
            num_san,
            num_loc,
            num_coc,
            num_bod,
            num_lav,
            num_pat,
            esp_mul,
            zon_soc,
            cri_ani,
            coc_enc,
            coc_lav,
            coc_mes,
            coc_ind,
            san_enc,
            san_duc,
            san_apar,
            san_des,
            san_poz,
            san_lad,
            img_ext,
            img_nom,
            img_esp,
            img_hab,
            img_coc,
            img_usa,
            plano,
            observ,
            nom_ela,
            car_ela,
            nom_rev,
            car_rev,
            img_plano,
            foto_plano,
            foto_ubicacion,
            ubicacion,
            revisado,
            fecha_revisado,
            usuario_que_revisa,
            estado
            from ficha_reconocimiento_v1 as ft, definitiva as df where identificador='@identificador' and  ft.identificador=df."IDENTIFICADOR"


            )
            select * from sel    
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    <Consulta id="verificar_permiso_envio">
        <sql>
            select count(*)as cuenta, (select revisado from ficha_reconocimiento_v1 where identificador='@identificador')  from procesos.actividad pa inner join procesos.proceso pp on pa.id_proceso=pp.id_proceso where identificador ='2018-8-383899' and id_tipo_actividad=7 and estado=1 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_all_ficha">
        <sql>
            select identificador from ficha_reconocimiento_v1;
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="buscar_ficha_imagenes">
        <sql>

            WITH 

            upd as(
            UPDATE ficha_reconocimiento_v1
            SET 	
            identificador='@identificador'                
            WHERE identificador='@identificador'
            returning identificador
            ),
            ins as(
            INSERT INTO ficha_reconocimiento_v1(identificador)
            SELECT '@identificador' 
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            ),
            sel as (
            Select 
       
            img_ext,
            img_nom,
            img_esp,
            img_hab,
            img_coc,
            img_usa,
            img_plano,
            foto_plano,
            foto_ubicacion
            from ficha_reconocimiento_v1 where identificador='@identificador'


            )
            select * from sel    
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="save_lista_chequeo">
        <sql>
            UPDATE procesos.lista_chequeo
            SET
            con_tec_idiger='@con_tec_idiger_b',
            con_tec_idiger_folio='@con_tec_idiger_folio',
            con_tec_idiger_notas='@con_tec_idiger_notas',
            diag_tec_idiger='@diag_tec_idiger_b',
            diag_tec_idiger_folio='@diag_tec_idiger_folio',
            diag_tec_idiger_notas='@diag_tec_idiger_notas',
            ficha_tec_rec='@ficha_tec_rec_b',
            ficha_tec_rec_folio='@ficha_tec_rec_folio',
            ficha_tec_rec_notas='@ficha_tec_rec_notas',
            ficha_inf_predial='@ficha_inf_predial_b',
            ficha_inf_predial_folio='@ficha_inf_predial_folio',
            ficha_inf_predial_notas='@ficha_inf_predial_notas',
            ficha_social='@ficha_social_b',
            ficha_social_folio='@ficha_social_folio',
            ficha_social_notas='@ficha_social_notas',
            copia_cedula='@copia_cedula_b',
            copia_cedula_folio='@copia_cedula_folio',
            copia_cedula_notas='@copia_cedula_notas',
            copia_registro_civil='@copia_registro_civil_b',
            copia_registro_civil_folio='@copia_registro_civil_folio',
            copia_registro_civil_notas='@copia_registro_civil_notas',
            doc_sisben='@doc_sisben_b',
            doc_sisben_folio='@doc_sisben_folio',
            doc_sisben_notas='@doc_sisben_notas',
            cert_medico_disc='@cert_medico_disc_b',
            cert_medico_disc_folio='@cert_medico_disc_folio',
            cert_medico_disc_notas='@cert_medico_disc_notas',
            doc_est_civil='@doc_est_civil_b',
            doc_est_civil_folio='@doc_est_civil_folio',
            doc_est_civil_notas='@doc_est_civil_notas',
            cop_rec_acu='@cop_rec_acu_b',
            cop_rec_acu_folio='@cop_rec_acu_folio',
            cop_rec_acu_notas='@cop_rec_acu_notas',
            cop_rec_ene='@cop_rec_ene_b',
            cop_rec_ene_folio='@cop_rec_ene_folio',
            cop_rec_ene_notas='@cop_rec_ene_notas',
            cop_rec_gas='@cop_rec_gas_b',
            cop_rec_gas_folio='@cop_rec_gas_folio',
            cop_rec_gas_notas='@cop_rec_gas_notas',
            esc_publica_par='@esc_publica_par_b',
            esc_publica_par_folio='@esc_publica_par_folio',
            esc_publica_par_notas='@esc_publica_par_notas',
            cert_tradicion='@cert_tradicion_b',
            cert_tradicion_folio='@cert_tradicion_folio',
            cert_tradicion_notas='@cert_tradicion_notas',
            imp_predial='@imp_predial_b',
            imp_predial_folio='@imp_predial_folio',
            imp_predial_notas='@imp_predial_notas',
            cert_catastral='@cert_catastral_b',
            cert_catastral_folio='@cert_catastral_folio',
            cert_catastral_notas='@cert_catastral_notas',
            cont_cesion='@cont_cesion_b',
            cont_cesion_folio='@cont_cesion_folio',
            cont_cesion_notas='@cont_cesion_notas',
            dec_extraproceso_afirma='@dec_extraproceso_afirma_b',
            dec_extraproceso_afirma_folio='@dec_extraproceso_afirma_folio',
            dec_extraproceso_afirma_notas='@dec_extraproceso_afirma_notas',
            cop_ced_testigos='@cop_ced_testigos_b',
            cop_ced_testigos_folio='@cop_ced_testigos_folio',
            cop_ced_testigos_notas='@cop_ced_testigos_notas',
            cert_catastral_posee='@cert_catastral_posee_b',
            cert_catastral_posee_folio='@cert_catastral_posee_folio',
            cert_catastral_posee_notas='@cert_catastral_posee_notas',
            obs_lista='@obs_lista'                                 
            WHERE identificador='@identificador' and tipo_estudio='@tipo_estudio'           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="save_acta_entrega">
        <sql>
            WITH 
            sel as (
            Select identificador from acta_entrega where identificador='@identificador'
            ),
            upd as(
            UPDATE	acta_entrega
            SET 
            identificador= '@identificador',
            fecha_acta_entrega=CASE WHEN to_date('@fecha','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha','DD MM YYYY') END, 	
            cerrado='@cerrado',
            observ_acta_entrega='@observaciones',
            carac_tecnicas='@carac_tecnicas',
            acta_entrega_upd_user='@usuario_nombre',
            acta_entrega_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO acta_entrega(
            identificador,
            fecha_acta_entrega,
            observ_acta_entrega,
            carac_tecnicas,
            cerrado,
            acta_entrega_user,
            acta_entrega_time
            )
            SELECT
            '@identificador',
            CASE WHEN to_date('@fecha','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha','DD MM YYYY') END, 
            '@observaciones',	
            '@carac_tecnicas',
            '@cerrado',
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="save_adenda">
        <sql>           
            WITH 
            sel as (
            Select identificador,consecutivo,tipo_estudio from  procesos.adenda where identificador='@identificador' and consecutivo =@consecutivo and tipo_estudio='@tipo_estudio'
            ),
            upd as(
            UPDATE procesos.adenda
            SET 
            fuente_linderos='@fuente_linderos',
            motivos_adenda='@motivos_adenda',
            conclusion_adenda='@conclusion_adenda',
            adenda_procede='@adenda_procede',      
            adenda_upd_user='@usuario_nombre',
            adenda_upd_time=current_timestamp,
            tipo_cargue_adenda='@tipo_cargue_adenda',
            fecha_adenda= CASE WHEN to_date('@fecha_adenda','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_adenda','YYYY MM DD') END,
            estado=@estado
            WHERE identificador=(select identificador from sel) and consecutivo=(select consecutivo from sel) and tipo_estudio=(select tipo_estudio from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.adenda(
            identificador,
            tipo_estudio,
            consecutivo,
            fuente_linderos,
            motivos_adenda,
            conclusion_adenda,
            adenda_procede,    	
            adenda_user,
            adenda_time,
            tipo_cargue_adenda,
            fecha_adenda,
            estado
            )
            SELECT
            '@identificador',
            '@tipo_estudio',
             @consecutivo,
            '@fuente_linderos',
            '@motivos_adenda',
            '@conclusion_adenda',
            '@adenda_procede',    
            '@usuario_nombre',
            current_timestamp,
            '@tipo_cargue_adenda',
            CASE WHEN to_date('@fecha_adenda','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_adenda','YYYY MM DD') END,
            @estado
            WHERE NOT EXISTS (select 1 from sel)
            returning identificador	
            )
            select * from upd union select * from ins
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="save_proy_inmobiliaria">
        <sql>           
                WITH 
                sel as (
                Select consecutivo from  gestion_inmobiliaria.proyecto where consecutivo='@consecutivo' 
                ),
                upd as(
                UPDATE gestion_inmobiliaria.proyecto
                SET 
                nombre='@crea_nom_proy',
                constructor='@crea_nom_cons',
                tipo_proyecto='@crea_tipo_proy',
                fecha_entrega= CASE WHEN to_date('@crea_fecha_entrega','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@crea_fecha_entrega','YYYY MM DD') END,
                proyecto_upd_user='@usuario_nombre',
                proyecto_upd_time =current_timestamp
                WHERE consecutivo=(select consecutivo from sel) 
                returning consecutivo
                ),ins as(
                INSERT INTO gestion_inmobiliaria.proyecto(
                consecutivo,
                nombre,
                constructor,
                tipo_proyecto,
                fecha_entrega,
                proyecto_user,
                proyecto_time
                )
                SELECT
                @consecutivo,
                '@crea_nom_proy',
                '@crea_nom_cons',
                '@crea_tipo_proy',
                CASE WHEN to_date('@crea_fecha_entrega','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@crea_fecha_entrega','YYYY MM DD') END,
                '@usuario_nombre',
                current_timestamp
                WHERE NOT EXISTS (select 1 from sel)
                returning consecutivo	
                )
                select * from upd union select * from ins
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="save_des_inmobiliaria">
        <sql>           
	WITH 
	sel as (
	Select consecutivo,identificador from  gestion_inmobiliaria.desestimientos where consecutivo=@consecutivo and identificador='@identificador'
	),
	upd as(
	UPDATE gestion_inmobiliaria.desestimientos
	SET 
	fecha_registro_desestimiento=CASE WHEN to_date('@fecha_registro_des','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_registro_des','YYYY MM DD') END,
	fecha_desestimiento=CASE WHEN to_date('@fecha_desestimiento_des','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_desestimiento_des','YYYY MM DD') END,
	causal_desestimiento= '@causal_des',
	user_upd='@usuario_nombre',
	user_upd_time =current_timestamp
	WHERE consecutivo=(select consecutivo from sel) and identificador=(select identificador from sel)
	returning identificador
	),ins as(
	INSERT INTO gestion_inmobiliaria.desestimientos(
	identificador,
	consecutivo,
	fecha_registro_desestimiento,
	fecha_desestimiento,
	causal_desestimiento,
	user_ins,
	user_ins_time
	)
	SELECT
	'@identificador',
	@consecutivo,                
	CASE WHEN to_date('@fecha_registro_des','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_registro_des','YYYY MM DD') END,
	CASE WHEN to_date('@fecha_desestimiento_des','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_desestimiento_des','YYYY MM DD') END,
	'@causal_des',
	'@usuario_nombre',
	current_timestamp
	WHERE NOT EXISTS (select 1 from sel)
	returning identificador	
	)
	select * from upd union select * from ins;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>   
    
    
    
    
    
    <Consulta id="get_data_inmobiliaria">
        <sql>           
            select "Nombre 1" as nombre, "Cedula 1" as cedula from definitiva where "IDENTIFICADOR" ='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    <Consulta id="get_data_sel_vivienda_inmobiliaria">
        <sql>           
            select identificador as id,proyecto_escogido as sel_proyecto, torre as sel_torre, apartamento as sel_apto, fecha_seleccion as sel_fecha_sel, estado as estado_estado
            from gestion_inmobiliaria.seleccion_vivienda
            where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>  

    <Consulta id="get_data_cruces_inmobiliaria">
        <sql>           
            select sentencia as cru_sentencia, causal as cru_causal, entidad as cru_entidad, inscripcion as cru_inscripcion, fecha_inscripcion as cru_fecha_inscripcion
            from gestion_inmobiliaria.cruces_informacion
            where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>       
    
      <Consulta id="save_sel_vivienda_inmobiliaria">
        <sql>           
            WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@identificador'
            ),
            upd as(
            UPDATE gestion_inmobiliaria.seleccion_vivienda
            SET 
            proyecto_escogido= '@sel_proyecto',
            torre='@sel_torre',
            apartamento='@sel_apto',
            fecha_seleccion=CASE WHEN to_date('@sel_fecha_sel','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@sel_fecha_sel','YYYY MM DD') END,
            contrato_upd_user='@usuario',
            contrato_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO gestion_inmobiliaria.seleccion_vivienda(
            identificador,
            proyecto_escogido,
            torre,
            apartamento,
            fecha_seleccion,
            contrato_user,
            contrato_time
            )
            SELECT
            '@identificador',
            '@sel_proyecto',
            '@sel_torre',
            '@sel_apto',
            CASE WHEN to_date('@sel_fecha_sel','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@sel_fecha_sel','YYYY MM DD') END,
            '@usuario',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins            
            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>     
  
    <Consulta id="save_cruces_inmobiliaria">
        <sql> 
                      
	    WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@identificador'
            ),
            upd as(
            UPDATE gestion_inmobiliaria.cruces_informacion
            SET 
            sentencia= '@cru_sentencia',
            causal='@cru_causal',
            entidad='@cru_entidad',
            inscripcion='@cru_inscripcion',
            fecha_inscripcion=CASE WHEN to_date('@cru_fecha_inscripcion','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@cru_fecha_inscripcion','YYYY MM DD') END,
            contrato_upd_user='@usuario',
            contrato_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO gestion_inmobiliaria.cruces_informacion(
            identificador,
            sentencia,
            causal,
            entidad,
            inscripcion,
            fecha_inscripcion,
            contrato_user,
            contrato_time
            )
            SELECT
            '@identificador',
            '@cru_sentencia',
            '@cru_causal',
            '@cru_entidad',
            '@cru_inscripcion',
            CASE WHEN to_date('@cru_fecha_inscripcion','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@cru_fecha_inscripcion','YYYY MM DD') END,
            '@usuario',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins;                   
   
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>     
      
    <Consulta id="save_estado_inmobiliaria">
        <sql> 
            
  	    WITH 
            sel as (
            Select "IDENTIFICADOR" as identificador from definitiva where "IDENTIFICADOR"='@identificador'
            ),
            upd as(
            UPDATE gestion_inmobiliaria.seleccion_vivienda
            SET 
            estado= '@estado_estado',
            contrato_upd_user='@usuario',
            contrato_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO gestion_inmobiliaria.seleccion_vivienda(
            identificador,
            estado,
            contrato_user,
            contrato_time
            )
            SELECT
            '@identificador',
            '@estado_estado',
            '@usuario',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins                      
                
   
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>     
    
    <Consulta id="guardar_datos_sensibles_adenda">
        <sql>           
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"='@identificador' 
            ),
            upd as(
            UPDATE	definitiva
            SET 	
            "1er_Apellido_Ben1"=UPPER('@ape_prin_1'),
            "2do_Apellido_Ben1" = UPPER('@ape_prin_2'),
            "1er_Nombre_Ben1" = UPPER('@nom_prin_1'),
            "2do_Nombre_Ben1" = UPPER('@nom_prin_2'),
            "1er_Apellido_Ben2" = UPPER('@ape_sec_1'),
            "2do_Apellido_Ben2" = UPPER('@ape_sec_2') ,
            "1er_Nombre_Ben2" = UPPER('@nom_sec_1') ,
            "2do_Nombre_Ben2" = UPPER('@nom_sec_2'),
            "Cedula 1" = cast(coalesce(nullif('@ced1',''),null) as bigint), 
            "Cedula 2" = cast(coalesce(nullif('@ced2',''),null) as bigint), 
            "Nombre 1"= UPPER(concat('@nom_prin_1',' ','@nom_prin_2',' ','@ape_prin_1',' ','@ape_prin_2')),
            "Nombre 2"= UPPER(concat('@nom_sec_1',' ','@nom_sec_2',' ','@ape_sec_1',' ','@ape_sec_2')),
            contrato_upd_user='@user_upd',
            contrato_upd_time=current_timestamp        
            WHERE "IDENTIFICADOR"=(select "IDENTIFICADOR" from sel)
            returning "IDENTIFICADOR"
            ),
            upd1 as(
            UPDATE procesos.est_documentos
            SET
            tenencia='@tenencia',
            procede='@procede'
            where identificador=(select "IDENTIFICADOR" from sel) and tipo_estudio='@tipo_estudio' and consecutivo='1'
            returning identificador
            )
            select * from upd;        
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    

    <Consulta id="save_info_caracoli">
        <sql>
            WITH 
            sel as (
            Select num_sdh from caracoli.caracoli where num_sdh='@num_sdh'
            ),
            upd as(
            UPDATE	caracoli.caracoli
            SET 
            num_sdh= '@num_sdh',
            fecha_acta=CASE WHEN to_date('@fecha_acta','DD MM YYYY') = '0001-01-01' THEN NULL ELSE to_date('@fecha_acta','DD MM YYYY') END, 
            num_acta='@num_acta',
            direccion='@direccion',
            nom1='@nom1',
            nom2='@nom2',
            ape1='@ape1',
            ape2='@ape2',
            cedula='@cedula',
            tel1='@tel1',
            tel2='@tel2',
            calidad_habita='@calidad_habita',
            calidadhabitaotro='@calidadhabitaotro',
            residia_antes='@residia_antes',
            residiaantesdonde='@residiaantesdonde',
            residiaanteszona='@residiaanteszona',
            desea_retornar='@desea_retornar',
            desearetornarpq='@desearetornarpq',
            hay_embarazadas='@hay_embarazadas',
            enf_respiratoria='@enf_respiratoria',
            enfrespiratoriacausa=array@enfrespiratoriacausa,
            ocuhabitada='@ocuhabitada',
            ocuconsolidado='@ocuconsolidado',
            ocuprovisional='@ocuprovisional',
            usocomercial='@usocomercial',
            usoresidencial='@usoresidencial',
            mas_viv='@mas_viv',
            masvivnum='@masvivnum',
            num_pisos='@num_pisos',
            hay_ani='@hay_ani',
            tip_ani=array@tip_ani,
            tipaniotro='@tipaniotro',
            can_peligro='@can_peligro',
            canpeligroraza='@canpeligroraza',
            hay_esp_prod='@hay_esp_prod',
            hayespprodcual='@hayespprodcual',
            observaciones='@observaciones',
            caracoli_upd_user='@usuario_nombre',
            caracoli_upd_time=current_timestamp
            WHERE num_sdh=(select num_sdh from sel)
            returning num_acta
            ),ins as(
            INSERT INTO caracoli.caracoli(
            num_sdh,
            fecha_acta,
            num_acta,
            direccion,
            nom1,
            nom2,
            ape1,
            ape2,
            cedula,
            tel1,
            tel2,
            calidad_habita,
            calidadhabitaotro,
            residia_antes,
            residiaantesdonde,
            residiaanteszona,
            desea_retornar,
            desearetornarpq,
            hay_embarazadas,
            enf_respiratoria,
            enfrespiratoriacausa,
            ocuhabitada,
            ocuconsolidado,
            ocuprovisional,
            usocomercial,
            usoresidencial,
            mas_viv,
            masvivnum,
            num_pisos,
            hay_ani,
            tip_ani,
            tipaniotro,
            can_peligro,
            canpeligroraza,
            hay_esp_prod,
            hayespprodcual,
            observaciones,
            caracoli_user,
            caracoli_time
            )
            SELECT
            '@num_sdh',
            CASE WHEN to_date('@fecha_acta','DD MM YYYY') = '0001-01-01' THEN NULL ELSE to_date('@fecha_acta','DD MM YYYY') END,
            '@num_acta',
            '@direccion',
            '@nom1',
            '@nom2',
            '@ape1',
            '@ape2',
            '@cedula',
            '@tel1',
            '@tel2',
            '@calidad_habita',
            '@calidadhabitaotro',
            '@residia_antes',
            '@residiaantesdonde',
            '@residiaanteszona',
            '@desea_retornar',
            '@desearetornarpq',
            '@hay_embarazadas',
            '@enf_respiratoria',
            array@enfrespiratoriacausa,
            '@ocuhabitada',
            '@ocuconsolidado',
            '@ocuprovisional',
            '@usocomercial',
            '@usoresidencial',
            '@mas_viv',
            '@masvivnum',
            '@num_pisos',
            '@hay_ani',
            array@tip_ani,
            '@tipaniotro',
            '@can_peligro',
            '@canpeligroraza',
            '@hay_esp_prod',
            '@hayespprodcual',
            '@observaciones',
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning num_sdh	
            )
            select * from upd union select * from ins
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_info_caracoli">
        <sql>
            select * from caracoli.caracoli where num_sdh='@num_sdh';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="get_info_adenda">
        <sql>
            select pa.*,sql.concepto,pa.identificador as id           
            from procesos.adenda pa 
            left join (select * from procesos.aprob_adenda where identificador='@identificador' and consecutivo='@consecutivo' and tipo_estudio='@tipo_estudio')sql
            on pa.identificador=sql.identificador
            where pa.identificador='@identificador' and pa.consecutivo='@consecutivo' and pa.tipo_estudio='@tipo_estudio';       
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="get_info_adenda_info_sensible">
        <sql>
            select  
            "1er_Nombre_Ben1" as nom_prin_1,
            "2do_Nombre_Ben1" as nom_prin_2,
            "1er_Apellido_Ben1" as ape_prin_1,
            "2do_Apellido_Ben1" as ape_prin_2,
            "Cedula 1" as ced1,            
            "1er_Nombre_Ben2" as nom_sec_1,
            "2do_Nombre_Ben2" as nom_sec_2,
            "1er_Apellido_Ben2" as ape_sec_1,
            "2do_Apellido_Ben2" as ape_sec_2,
            "Cedula 2" as ced2,
            (select tenencia from procesos.est_documentos where identificador=df."IDENTIFICADOR" and tipo_estudio='@tipo_estudio')as tenencia,
            (select CASE WHEN procede='No' THEN 'NEGATIVO'
            WHEN procede='Si' THEN 'POSITIVO'
            ELSE ''
            END from procesos.est_documentos where identificador=df."IDENTIFICADOR" and tipo_estudio='@tipo_estudio')as est_procede      
            from definitiva df
            where "IDENTIFICADOR"='@identificador';             
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>   
    
    
    <Consulta id="get_info_adenda_general">
        <sql>
            select count(*) as total from procesos.adenda pa 
            where pa.identificador='@identificador' and tipo_estudio='@tipo_estudio';            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="get_info_caracoli_fotos">
        <sql>
            select cc.num_sdh as num_sdh,cf.* from caracoli.caracoli cc left join caracoli.fotos cf on cc.num_sdh=cf.num_sdh where cc.num_sdh='@num_sdh';

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="get_info_financiera">
        <sql>
            select "IDENTIFICADOR" as identificador,"Nombre 1" as nom_ben,
            "Cedula 1" as num_doc, no_cdp as num_cdp, fecha_cdp, no_resol as num_res,fecha_resol as fecha_res,
            no_rp,rv.fecha_rp as fecha_rp,num_cta,ent_ban,val_gir,elaboro,aprobo,concepto
            from definitiva df inner join financiera_reas.cdp_rp rv on
            df."IDENTIFICADOR"= rv.identificador left join procesos.financiera pf
            on df."IDENTIFICADOR"= pf.identificador left join procesos.aprob_financiera af on df."IDENTIFICADOR"= af.identificador
            where rv.identificador='@identificador'  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="verificar_id_caracoli">
        <sql>
            select num_sdh from caracoli.caracoli where num_sdh='@num_sdh';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="insertar_id_caracoli">
        <sql>
            INSERT INTO caracoli.caracoli(num_sdh,caracoli_user,caracoli_time) values('@num_sdh','@usuario_nombre',current_timestamp);
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="buscar_caracoli">
        <sql>
            select fecha_acta,num_acta,num_sdh,direccion,cedula,tel1, concat(upper(nom1),' ',upper(nom2),' ',upper(ape1),' ',upper(ape2))as nombre from caracoli.caracoli 
            where concat(upper(nom1),' ',upper(nom2),' ',upper(ape1),' ',upper(ape2)) like '%@texto%' or cedula like '%@texto%' or tel1 like '%@texto%' or tel2 like '%@texto%'
            or upper(num_acta) like '%@texto%' or num_sdh like '%@texto%' or upper(direccion) like '%@texto%' order by num_sdh
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    
    <Consulta id="save_fam_caracoli">
        <sql>
            
            WITH 
            sel as (
            Select num_sdh,doc_ide from caracoli.familia where num_sdh='@num_sdh' and doc_ide='@doc_ide'
            ),
            upd as(
            UPDATE	caracoli.familia
            SET 
            num_sdh='@num_sdh',
            nom1f='@nom1f',
            nom2f='@nom2f',
            ape1f='@ape1f',
            ape2f='@ape2f',
            tip_doc='@tip_doc',
            doc_ide='@doc_ide',
            fec_nac='@fec_nac',
            rel_jef='@rel_jef',
            uni_soc='@uni_soc',
            tie_dis='@tie_dis',
            tip_dis='@tip_dis',
            pre_dia='@pre_dia',
            familia_upd_user='@usuario_nombre',
            familia_upd_time=current_timestamp
            WHERE num_sdh=(select num_sdh from sel) and doc_ide=(select doc_ide from sel)
            returning num_sdh
            ),ins as(
            INSERT INTO caracoli.familia(
            num_sdh,
            nom1f,
            nom2f,
            ape1f,
            ape2f,
            tip_doc,
            doc_ide,
            fec_nac,
            rel_jef,
            uni_soc,
            tie_dis,
            tip_dis,
            pre_dia,
            familia_user,
            familia_time

            )
            SELECT
            '@num_sdh',
            '@nom1f',
            '@nom2f',
            '@ape1f',
            '@ape2f',
            '@tip_doc',
            '@doc_ide',
            '@fec_nac',
            '@rel_jef',
            '@uni_soc',
            '@tie_dis',
            '@tip_dis',
            '@pre_dia',
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning num_sdh	
            )
            select * from upd union select * from ins

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="get_info_fam_caracoli">
        <sql>
            

            select * from caracoli.familia where num_sdh='@num_sdh' 

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="get_info_inmobiliaria_proyecto">
        <sql>
            

            select * from gestion_inmobiliaria.proyecto order by consecutivo;

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
 
    <Consulta id="get_info_inmobiliaria_desestimientos">
        <sql>
            

            select * from gestion_inmobiliaria.desestimientos where identificador ='@identificador' order by consecutivo;

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>       
        
                
    <Consulta id="delete_fam_caracoli">
        <sql>
            delete  from caracoli.familia where num_sdh='@num_sdh' and  doc_ide='@doc_ide';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>     
    <Consulta id="delete_inmobiliaria_proyecto">
        <sql>
            delete  from gestion_inmobiliaria.proyecto where consecutivo=@consecutivo
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>     
    <Consulta id="save_acta_entrega_vereditas">
        <sql>
            WITH 
            sel as (
            Select identificador from acta_entrega where identificador='@identificador'
            ),
            upd as(
            UPDATE	acta_entrega
            SET 
            identificador= '@identificador',
            fecha_acta_entrega=CASE WHEN to_date('@fecha','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha','DD MM YYYY') END, 	
            cerrado='@cerrado',
            acta_entrega_upd_user='@usuario_nombre',
            acta_entrega_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO acta_entrega(
            identificador,
            fecha_acta_entrega,
            cerrado,
            acta_entrega_user,
            acta_entrega_time
            )
            SELECT
            '@identificador',
            CASE WHEN to_date('@fecha','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha','DD MM YYYY') END, 
            '@cerrado',
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="save_resolucion_vereditas">
        <sql>
            WITH 
            sel as (
            Select identificador from procesos.resolucion_vur where identificador='@identificador'
            ),
            upd as(
            UPDATE	procesos.resolucion_vur
            SET 
            identificador= '@identificador',
            num_res=cast(coalesce(nullif('@num_res',''),null) as int),
            fecha_res=CASE WHEN to_date('@fecha_res','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_res','DD MM YYYY') END,
            val_res=cast(coalesce(nullif('@val_res',''),null) as int), 
            cdp_res=cast(coalesce(nullif('@cdp_res',''),null) as int),
            persona_notificada='@persona_notificada',
            fecha_ejec=CASE WHEN to_date('@fecha_ejec','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_ejec','DD MM YYYY') END,
            fecha_not=CASE WHEN to_date('@fecha_not','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_not','DD MM YYYY') END,
            fecha_cdp=CASE WHEN to_date('@fecha_cdp','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_cdp','DD MM YYYY') END,
            resolucion_vur_upd_user='@usuario_nombre',
            resolucion_vur_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.resolucion_vur(
            identificador,
            num_res,
            fecha_res,
            val_res,
            cdp_res,
            persona_notificada,
            fecha_ejec,
            fecha_not,
            fecha_cdp,
            resolucion_vur_user,
            resolucion_vur_time
            )
            SELECT
            '@identificador',
            cast(coalesce(nullif('@num_res',''),null) as int),
            CASE WHEN to_date('@fecha_res','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_res','DD MM YYYY') END,
            cast(coalesce(nullif('@val_res',''),null) as int), 
            cast(coalesce(nullif('@cdp_res',''),null) as int),
            '@persona_notificada',
            CASE WHEN to_date('@fecha_ejec','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_ejec','DD MM YYYY') END, 
            CASE WHEN to_date('@fecha_not','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_not','DD MM YYYY') END, 
            CASE WHEN to_date('@fecha_cdp','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_cdp','DD MM YYYY') END, 
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="save_acta_cierre_est_documentos_negativo">
        <sql>
            WITH 
            sel as (
            Select identificador from procesos.acta_cierre_est_documentos where identificador='@identificador'
            ),
            upd as(
            UPDATE procesos.acta_cierre_est_documentos
            SET 
            fecha_not=CASE WHEN to_date('@fecha_not','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_not','DD MM YYYY') END,
            fecha_act=CASE WHEN to_date('@fecha_act','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_act','DD MM YYYY') END,
            acta_cierre_est_documentos_upd_user='@usuario_nombre',
            acta_cierre_est_documentos_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.acta_cierre_est_documentos(
            identificador,
            fecha_not,
            fecha_act,
            acta_cierre_est_documentos_user,
            acta_cierre_est_documentos_time
            )
            SELECT
            '@identificador',
            CASE WHEN to_date('@fecha_not','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_not','DD MM YYYY') END, 
            CASE WHEN to_date('@fecha_act','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_act','DD MM YYYY') END, 
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="save_info_financiera">
        <sql>
            
        update financiera_reas.cdp_rp set no_rp='@no_rp', fecha_rp=CASE WHEN to_date('@fecha_rp','DD MM YYYY') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_rp','DD MM YYYY') END
        where identificador='@identificador' and conse=1;
        
            
        WITH 
            sel as (
            Select identificador from procesos.financiera where identificador='@identificador'
            ),
            upd as(
            UPDATE	procesos.financiera
            SET 
            identificador= '@identificador',
            num_cta='@num_cta',
            ent_ban='@ent_ban',
            val_gir=@val_gir,
            financiera_upd_user='@usuario_nombre',
            financiera_upd_time=current_timestamp
            WHERE identificador=(select identificador from sel)
            returning identificador
            ),ins as(
            INSERT INTO procesos.financiera(
            identificador,
            num_cta,
            ent_ban,
            val_gir,
            financiera_user,
            financiera_time
            )
            SELECT
            '@id',
            '@num_cta',
            '@ent_ban',
            @val_gir,
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning identificador	
            )
            select * from upd union select * from ins    
                
            
            
            
            
            
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="save_info_caracoli_fotos">
        <sql>
            WITH 
            sel as (
            Select num_sdh from caracoli.fotos where num_sdh='@num_sdh'
            ),
            upd as(
            UPDATE	caracoli.fotos
            SET 
            num_sdh= '@num_sdh',
            observaciones='@observaciones',
            fotos_upd_user='@usuario_nombre',
            fotos_upd_time=current_timestamp
            WHERE num_sdh=(select num_sdh from sel)
            returning num_sdh
            ),ins as(
            INSERT INTO caracoli.fotos(
            num_sdh,
            observaciones,
            fotos_user,
            fotos_time
            )
            SELECT
            '@num_sdh',
            '@observaciones',
            '@usuario_nombre',
            current_timestamp
            WHERE NOT EXISTS (select 1 from upd )
            returning num_sdh	
            )
            select * from upd union select * from ins

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>   
    <Consulta id="reporte_fichas_vereditas">
        <sql>
            select 
            "IDENTIFICADOR" as identificador,
            "IDENTIFICA_ANTERIOR"as id_provisional ,
            CONCAT ( "1er_Nombre_Ben1",' ',"2do_Nombre_Ben1",' ',"1er_Apellido_Ben1",' ',"2do_Apellido_Ben1" )as nombre_principal,
            "Cedula 1" as cedula, 
            upper("Sector") as sector,
            (case when EXISTS(SELECT identificador as id_social from tbl_arraigo_vivienda as tb_social where identificador="IDENTIFICADOR")then 'Si' 
            else 'No' end)as ficha_social,
            (case when 
            EXISTS(SELECT identificador as id_tecnico from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR")then 'Si' else 'No' end) as ficha_tecnica,
            (SELECT upper(nom_ela) as creador_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT fecha_elaboracion as fecha_elaboracion_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT upper(usuario_que_revisa) as usuario_que_revisa_ficha_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT fecha_revisado as fecha_revision_ficha_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT upper(usuario_nombre)as creador_social  from tbl_arraigo_vivienda as tb_social inner join usuario as us  on tb_social.id_profesional=us.usuario_id where identificador="IDENTIFICADOR" limit 1),
            (SELECT to_char(upd_time, 'YYYY-MM-DD') as fecha_elaboracion_social  from tbl_arraigo_vivienda as tb_social inner join usuario as us  on tb_social.id_profesional=us.usuario_id where identificador="IDENTIFICADOR" limit 1),
            (SELECT "Num_Und_Habitacional" FROM "tbl_Unds_Habitacionales" WHERE "Identificador"="IDENTIFICADOR" OR "Identificador"="IDENTIFICA_ANTERIOR" limit 1) as unidades_habitacionales            
            from definitiva  where upper("Sector") like 'VEREDITAS%';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_fus">
        <sql>
            select pe.identificador,fecha_est as "Fecha Est. Documentos",procede,pe.tipo_estudio as "Tipo de Estudio",pa.elaboro as "Funcionario que elabora el est. documentos",
            pa.aprobo as "Funcionario que aprueba el est. documentos",fecha as "Fecha Aprobación", case when sub1.tipo_estudio is null then 'No' else 'Si' end as "Tiene Documento"
            from procesos.est_documentos pe 
            left join procesos.aprob_est_documentos pa on pe.identificador=pa.identificador and pe.tipo_estudio=pa.tipo_estudio 
            left join (
            select identificador, case when tidoc_id=2102 then '255' when tidoc_id=2202 then '511' else '' end as tipo_estudio from documento_adjunto) as sub1 on pe.identificador=sub1.identificador and pe.tipo_estudio=sub1.tipo_estudio
            WHERE
             pa.fecha BETWEEN '@desde' AND '@hasta' and pa.concepto=true and pe.tipo_estudio in('255','511')
        UNION
            select pe.identificador,fecha_est as "Fecha Est. Documentos",procede,pe.tipo_estudio as "Tipo de Estudio",pa.elaboro as "Funcionario que elabora el est. documentos",
            pa.aprobo as "Funcionario que aprueba el est. documentos",fecha as "Fecha Aprobación", case when sub1.tipo_estudio is null then 'No' else 'Si' end as "Tiene Documento"
            from procesos.est_documentos pe 
            left join procesos.aprob_est_documentos pa on pe.identificador=pa.identificador and pe.tipo_estudio=pa.tipo_estudio 
            left join (
            select identificador, case when tidoc_id=2102 then '651' else '' end as tipo_estudio from documento_adjunto) as sub1 on pe.identificador=sub1.identificador and pe.tipo_estudio=sub1.tipo_estudio
            WHERE
             pa.fecha BETWEEN '@desde' AND '@hasta' and pa.concepto=true and pe.tipo_estudio ='651';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
<Consulta id="reporte_escrituras">
        <sql>
        select identificador, no_escritura as "Nro de Escritura",fecha_escritura as "Fecha de Escritura",notaria as "Notaria", matricula_inmo as "Matricula Inmobiliaria",
        tipo_alternativa as "Tipo de Alternativa", estado as "Estado", observaciones as "Observaciones"
        from gestion_inmobiliaria."Escrituras_AlternativaHabitacional"
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="reporte_actas_entrega">
        <sql>
        select "IDENTIFICADOR","Localidad","Fecha Acta de entrega predio en riesgo a CVP"::timestamp::date,case when identificador is null then 'No' else 'Si' end as "Tiene Documento" from definitiva df left join 
        (select identificador from documento_adjunto where tidoc_id=7305 group by identificador)as sub1 on df."IDENTIFICADOR"=sub1.identificador
        WHERE "Fecha Acta de entrega predio en riesgo a CVP" BETWEEN '@desde' AND '@hasta';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>  
    <Consulta id="temporal">
        <sql>
        select * from "tbl_Miembros"
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    <Consulta id="reporteActaEntregaAlternativa">
        <sql>
        select "IDENTIFICADOR","Localidad","Fecha acta de entrega alternativa habitacional"::timestamp::date,case when identificador is null then 'No' else 'Si' end as "Tiene Documento" from definitiva df left join 
        (select identificador from documento_adjunto where tidoc_id=7101 group by identificador)as sub1 on df."IDENTIFICADOR"=sub1.identificador
        WHERE "Fecha acta de entrega alternativa habitacional" BETWEEN '@desde' AND '@hasta';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>  
    <Consulta id="reporte_verificacionTraslado">
            <sql>
            select "IDENTIFICADOR","Localidad","Fecha de Verificación de Traslado"::timestamp::date,case when identificador is null then 'No' else 'Si' end as "Tiene Documento" from definitiva df left join 
            (select identificador from documento_adjunto where tidoc_id=7201 group by identificador)as sub1 on df."IDENTIFICADOR"=sub1.identificador
            WHERE "Fecha de Verificación de Traslado" BETWEEN '@desde' AND '@hasta';
            </sql>
            <conexion>atencion_reloca</conexion>
            <permisos>*</permisos>
            <es_dml_complejo>true</es_dml_complejo>
        </Consulta>   
    
    
    <Consulta id="reporte_fichas_gavilanes">
        <sql>
            select 
            "IDENTIFICADOR" as identificador,
            "IDENTIFICA_ANTERIOR" as id_provisional ,
            CONCAT ( "1er_Nombre_Ben1",' ',"2do_Nombre_Ben1",' ',"1er_Apellido_Ben1",' ',"2do_Apellido_Ben1" )as nombre_principal,
            "Cedula 1" as cedula, 
            upper("Sector") as sector,
            (case when EXISTS(SELECT identificador as id_social from tbl_arraigo_vivienda as tb_social where identificador="IDENTIFICADOR")then 'Si' 
            else 'No' end)as ficha_social,
            (case when 
            EXISTS(SELECT identificador as id_tecnico from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR")then 'Si' else 'No' end) as ficha_tecnica,
            (SELECT upper(nom_ela) as creador_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT fecha_elaboracion as fecha_elaboracion_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT upper(usuario_que_revisa) as usuario_que_revisa_ficha_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT fecha_revisado as fecha_revision_ficha_tecnica from ficha_reconocimiento_v1 as tb_tecnica where identificador="IDENTIFICADOR"),
            (SELECT upper(usuario_nombre)as creador_social  from tbl_arraigo_vivienda as tb_social inner join usuario as us  on tb_social.id_profesional=us.usuario_id where identificador="IDENTIFICADOR" limit 1),
            (SELECT to_char(upd_time, 'YYYY-MM-DD') as fecha_elaboracion_social  from tbl_arraigo_vivienda as tb_social inner join usuario as us  on tb_social.id_profesional=us.usuario_id where identificador="IDENTIFICADOR" limit 1),
            (SELECT "Num_Und_Habitacional" FROM "tbl_Unds_Habitacionales" WHERE "Identificador"="IDENTIFICADOR" OR "Identificador"="IDENTIFICA_ANTERIOR" ) as unidades_habitacionales
            from definitiva  where upper("Sector") like 'GAVILANES%' and "IDENTIFICADOR" like '2018-11%';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_aprobacion_sig">
        <sql>
            select identificador,
            (SELECT concepto as concepto from aprobacion_sig where identificador=fr.identificador),
            (SELECT aprobacion_sig_user as usuario_que_aprueba from aprobacion_sig where identificador=fr.identificador),
            (SELECT aprobacion_sig_time::timestamp::date as fecha_aprobacion from aprobacion_sig where identificador=fr.identificador),
            (SELECT observaciones as observaciones from aprobacion_sig where identificador=fr.identificador)
            from ficha_reconocimiento_v1 as fr
            where revisado=true
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_estudios_en_elaboracion">
        <sql>
            select identificador as "IDENTIFICADOR",pa.id_proceso as "ID PROCESO",pa.fecha_creacion as "FECHA DE NOTIFICACIÓN","Sector" AS "SECTOR",us.usuario_nombre as "USUARIO SOCIAL",us1.usuario_nombre as "USUARIO JURIDICO" from (
            select max(id_proceso) as id_proceso,max(id_actividad)as id_actividad from procesos.actividad where actividad_padre=1 and id_tipo_actividad=2 and estado=1 group by (id_proceso) order by id_proceso )as sub
            inner join procesos.actividad pa on sub.id_actividad=pa.id_actividad
            inner join procesos.proceso pp on pa.id_proceso=pp.id_proceso 
            inner join definitiva df on pp.identificador=df."IDENTIFICADOR"
            inner join usuario us on us.usuario_id=pa.creado_por
            inner join usuario us1 on us1.usuario_id=pa.asignado_a
            order by pa.id_proceso;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_lista_chequeo">
        <sql>
            select identificador,fecha_creacion as fecha_envio,
            (select usuario_nombre from usuario where usuario_id=pa.creado_por) as social,
            (select usuario_nombre from usuario where usuario_id=pa.asignado_a) as abogado,
            (select fecha_creacion as fecha_devolucion from procesos.proceso pp
            inner join procesos.actividad pa on pa.id_proceso=pp.id_proceso
            and id_tipo_proceso=1 and actividad_padre=1 and id_tipo_actividad=5
            where identificador=pp.identificador),
            (select CASE WHEN cerrado=true THEN 'SI'
            ELSE 'NO'
            END as estudio_realizado 
            from procesos.est_documentos where identificador=pp.identificador)
            from procesos.proceso pp
            inner join procesos.actividad pa on pa.id_proceso=pp.id_proceso
            and id_tipo_proceso=1 and actividad_padre=1 and id_tipo_actividad=2
            order by id_actividad;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_reas">
        <sql>
            select 
            "IDENTIFICADOR",
            "IDENTIFICA_ANTERIOR",
            "Localidad",
            "UPZ",
            "Sector",
            "Barrio",
            "Dirección",
            "MZ",
            "LT",
            "Telefono",
            "Nombre 1",
            "Cedula 1",
            "Nombre 2",
            "Cedula 2",
            "Fecha de Ingreso al Proceso",
            "Concepto de Ingreso",
            "Nro Cédula Catastral",
            "Código Chip Catastro",
            cuenta_codensa,
            estado_codensa,
            fecha_solictud_codensa,
            fecha_paz_salvo_codensa,
            cuenta_acueducto,
            estado_acueducto,
            fecha_solictud_acueducto,
            fecha_paz_salvo_acueducto,
            cuenta_gas,
            estado_gas,
            fecha_solictud_gas,
            fecha_paz_salvo_gas,
            "Fecha acta de entrega alternativa habitacional",
            "Fecha de Verificación de Traslado",
            "Año de Reporte",
            "Fecha Acta de entrega predio en riesgo a CVP",
            "Solicitud Adecuación del Predio a DPAE",
            "Notificación Adecuación Predio en Alto riesgo",
            "Fecha Entrega predio en riesgo al DADEP",
            "Observaciones",
            "Predio demolido",
            "Fecha ficha predial",
            "fecha_traslado_inicial",
            "Fec_Notificacion_Alcaldia_Vigilancia_PAR",
            (select "Des_Estado_Proceso" from "tbl_Estados_Procesos" te where te."Cod_Estado_Proceso"=df."Cod_Estado_Proceso"),
            (select "Des_Estado_Subproceso" from "tbl_Estados_Subprocesos" te where te."Cod_Estado_Subproceso"=df."Cod_Estado_Subproceso"),
            "id_surr_idiger",
            "Num_Ficha_Social",
            "Num_Ficha_Tecnica"
            from definitiva df
            left join "tbl_Enlace_SURR" ts
            on df."IDENTIFICADOR"=ts."Identificador"
            where upper(COALESCE( NULLIF("Localidad",'') , '0' )) like '%@r_localidad%' and upper(COALESCE( NULLIF("Sector",'') , '0' )) like '%@r_sector%' and upper(COALESCE( NULLIF("UPZ",'') , '0' )) like '%@r_upz%' AND upper(COALESCE( NULLIF("Sector",'') , '0' )) NOT like '%VEREDITAS%';

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="consulta_detalles_beneficiario">
        <sql>
            SELECT 
            "IDENTIFICADOR"
            ,"IDENTIFICA_ANTERIOR"
            ,"Cedula 1" as cedula_evacuado
            ,"Nombre 1" as nombre_evacuado
            ,"Cedula 2" as cedula_2_evacuado
            ,"Nombre 2" as nombre_2_evacuado
            ,"Localidad" as localidad
            ,"UPZ" as upz
            ,"Sector" as sector
            ,"Barrio" as barrio
            ,"Dirección" as direccion
            ,"MZ" as manzana
            ,"LT" as lote
            ,"Telefono" as telefono
            , (select concepto from(
            SELECT identificador,
            array_to_string(array_agg(distinct concat(concepto_ingreso,' del ',to_char(fecha_concepto, 'DD/MM/YYYY'))),', ') AS concepto
            FROM concepto_ingreso
            where identificador='@identificador'
            GROUP BY identificador) as sub1) as concepto_ingreso
            ,(SELECT "Des_Estado_Proceso" from "tbl_Estados_Procesos" t WHERE t."Cod_Estado_Proceso" = def."Cod_Estado_Proceso") as estado
            ,(SELECT "Des_Estado_Subproceso" from "tbl_Estados_Subprocesos" t WHERE t."Cod_Estado_Subproceso" = def."Cod_Estado_Subproceso") as subestado
            ,(select count(*) from definitiva as d where d."Sector" like '%Vereditas%' and d."IDENTIFICADOR"=def."IDENTIFICADOR" ) as  esvereditas
            ,(SELECT "Des_Estado_Proceso" from "estadoProceso_Vereditas" t WHERE t."Cod_Estado_Proceso" = def."Cod_Estado_Proceso") as estado_v
            ,(SELECT "Des_Estado_Subproceso" from "Subestadosproceso_Vereditas" t WHERE t."Cod_Estado_Subproceso" = def."Cod_Estado_Subproceso") as subestado_v
            ,(SELECT count(*) from contrato WHERE contrato.identificador = def."IDENTIFICADOR") as reloca
            , (select sel_viv_fecha_entrega from seleccion_vivienda where identificador='@identificador') as fecha_vivienda
            , (select sel_viv_estado_entrega from seleccion_vivienda where identificador='@identificador') as estado_vivienda            
            , (select sel_viv_proyecto from seleccion_vivienda where identificador='@identificador') as proyecto_vivienda,
            (select "Num_Und_Habitacional" from "tbl_Unds_Habitacionales" where "Identificador"='@identificador' or  "Identificador"="IDENTIFICA_ANTERIOR" limit 1) as unidades_habitacionales,        
            (select  count(*)from  cuenta_ahorro_programado WHERE identificador='@identificador' or  identificador="IDENTIFICA_ANTERIOR") as cuenta_ahorro,
            (select  "IDENTIFICADOR" from definitiva d where d.id_familia=def.id_padre) as padre,
            cuenta_codensa ,
            estado_codensa,
            fecha_solictud_codensa ,
            fecha_paz_salvo_codensa,
            cuenta_acueducto,
            estado_acueducto,
            fecha_solictud_acueducto ,
            fecha_paz_salvo_acueducto ,
            cuenta_gas ,
            estado_gas,
            fecha_solictud_gas,
            fecha_paz_salvo_gas
            ,"Fecha de Ingreso al Proceso" 
            ,"Código Chip Catastro"
            ,"Fecha de Verificación de Traslado"
            ,"Fecha acta de entrega alternativa habitacional"
            ,"Fecha Entrega predio en riesgo al DADEP"
            ,"Solicitud Adecuación del Predio a DPAE"
            ,"Notificación Adecuación Predio en Alto riesgo"
            ,"Fec_Notificacion_Alcaldia_Vigilancia_PAR"
            ,"Fecha Acta de entrega predio en riesgo a CVP"
            ,"Predio_IDIGER"
            ,(select "Procede" from estudio_titulos t where t."IDENTIFICADOR"='@identificador'  AND "Fecha Estudio de Titulos" IS NOT NULL ) as estudios   
            ,(select "Procede" from "tbl_Estudio_Titulos_511" t where t."IDENTIFICADOR"='@identificador'   AND "Fecha Estudio de Titulos" IS NOT NULL ) as estudios_511
            ,(select 
            CASE WHEN estado_ficha=3 THEN true            
            ELSE false
            END
            from tbl_arraigo_vivienda where identificador='@identificador' limit 1 ) as ficha_caracterizacion
            ,(select estado_ficha  from fichasocial.aprobacion where identificador='@identificador') as nueva_ficha_social
            ,(select count(*)from "tbl_Miembros" where "Identificador" ='@identificador') as registro_caracterizacion
            ,(select  
            CASE WHEN revisado=true THEN true            
            ELSE false
            END from ficha_reconocimiento_v1 where identificador='@identificador') as ficha_reconocimiento
            ,(select count(*) from ficha_reconocimiento_v1 where identificador='@identificador') as conta_ficha_reconocimiento
            ,(select ('Contrato '|| consecontrato) as num_contrato from contrato WHERE identificador='@identificador' order by consecontrato DESC limit 1) as contrato
            ,(select cont_fecha_fin from contrato WHERE identificador='@identificador' order by consecontrato DESC limit 1) as fecha_fin
            ,(select (titular_nombre||' cc'||titular_cedula) as titular from contrato WHERE identificador='@identificador' order by consecontrato DESC limit 1) as titular 
            FROM definitiva as def
            where 
            "IDENTIFICADOR" = '@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="ficha_caracterizacion_hogar">
        <sql>
            SELECT *  FROM  definitiva FULL JOIN tbl_arraigo_vivienda ON "IDENTIFICADOR"=identificador 
            full join "tbl_Hogares" on "IDENTIFICADOR"="Identificador"                       
            WHERE "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="ficha_caracterizacion_miembros">
        <sql>
            select * from "tbl_Miembros"
            WHERE "Identificador"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="ficha_reconocimiento">
        <sql>
            
            SELECT date(fecha_elaboracion)as "Fecha elaboracion ficha", area_ter as "Area Lote", area_con as "Area Construccion", 
            estruct as "Estructura", cimen as "Cimentacion","LT",mat_cub as "Cubierta", mat_cub as "Tipo cubierta",mat_pis as "Acabados piso", 
            'ubica' as "Ubicacion",uso_pred as "Uso suelo",'N/A' as "Alcobas",zon_soc as "Zona social",num_san as "Baño",num_coc as "Cocina", 
            num_pat as "Patio", 'N/A' as "Otros", observ as "Observaciones",nom_ela as "Elaborado por",img_ext as "Foto1", 
            img_nom as "Foto2", dir_campo as "Dirección_Campo",dir_cat as "Direccion_Catastro", dir_reco as "Direccion_Otra", 
            acu_con as "Contador_EEAA", acu_dir as "Direccion_EEAA",'N/A' as "Contador_CODENSA", 'N/A' as "Direccion_CODENSA", 
            gas_con as "Contador_Gas_Natural", gas_dir as "Direccion_Gas_Natural",nombre_visita as "Nombre_Atiende", 
            cedula_visita as "Cedula_Atiende",telefono1 as "Telefono_Atiende",'N/A' as "Predio_Demolido", 'N/A' as "Habitado", 
            'N/A' as "Largo",'N/A' as  "Ancho",'N/A' as "Acabado_Cocina",'N/A' as "Acabado_Baño", 'N/A' as "Origen_Informacion", 
            lin_nor as "Lindero_Norte", lin_sur as "Lindero_Sur",lin_ori as "Lindero_Oriente",lin_occ as  "Lindero_Occidente", 
            'N/A' as "Anexo_Manzana_Catastral", 'N/A' as "Anexo_Concepto_Tecnico",'N/A' as "Anexo_Certificado_Nomenclatura", 
            'N/A' as "Anexo_Esquema",'N/A' as "Anexo_Otro",'N/A' as "Anexo_Cual_Otro",nom_rev as "Des_Revisor" ,definitiva."Localidad","UPZ","Barrio","Telefono","Dirección", 
            "Nombre 1","Cedula 1", "Nombre 2","Cedula 2","Código Chip Catastro",
            (select num_visitas_fallidas from visitas_fallidas where identificador=fr.identificador),
            (select habilitar_ficha from visitas_fallidas where identificador=fr.identificador)
            FROM public.ficha_reconocimiento_v1 as fr inner join definitiva
            ON fr.identificador=definitiva."IDENTIFICADOR" AND  definitiva."IDENTIFICADOR"='@identificador'
     
  
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="estudio_titulos">
        <sql>
            select 
            "Nro", "IDENTIFICADOR", "ConsecutivoReas", "De", "De 2", date("Fecha Estudio de Titulos") as "Fecha Estudio de Titulos", 
            (select "Des_Opcion" from "tbl_Campos_Auxiliares" where "Cod_Tabla"=47 and  "Cod_Tipo_Tenencia"="Cod_Opcion" ) as "Cod_Tipo_Tenencia",  
            (select "Concepto de Ingreso"  from definitiva where definitiva."IDENTIFICADOR"= estudio_titulos."IDENTIFICADOR" ) as "Concepto de Ingreso" ,
            (select date("Fecha de Ingreso al Proceso")  from definitiva where definitiva."IDENTIFICADOR"= estudio_titulos."IDENTIFICADOR" ) as "Fecha de Ingreso al Proceso" ,
            "Tipo Documento Tenencia","Notaria Predio en riesgo", 
            "Nro Documento Tenencia Predio en Riesgo", "Fecha Documento Tenencia", 
            "Nombre Vendedor Predio Alto Riesgo", "Matricula Inmobiliaria Predio en Riesgo", 
            "Descripción Inmueble", "Area_PAR_Doc_Tenencia", "Area_PAR_DACD", 
            "Norte", "Sur", "Oriente", "Occidente", "Descripción de la Tradicción", 
            "Fecha CLT", "Turno CLT", "Fotocopias de Cédulas", "Escritura Pública", 
            "Promesa de Compraventa o permuta", "Boletín Catastral", "Certificado de Nomenclatura", 
            "Certificado de Libertad y Tradición", "Servicios Públicos", 
            "Declaraciones Extrajuicio", "Certificado Junta de Acción Comunal", 
            "Otros", "Observaciones", "Elaborado por", "Revisado por", "Aprobado por", 
            "Procede", "Fecha de Notificación", "Aceptación", "Fecha Cesión", 
            "Fecha reparto notaría Minuta predio en riesgo", "Notaria de Reparto minuta predio en riesgo", 
            "Nro de Escritura venta predio en riesgo", "Fecha Escritura venta predio en riesgo", 
            "Firma escritura Venta predio en riesgo", "Fecha promesa de compraventa", 
            "Nro Escritura Alternativa hab", "Fecha Escrituración Alternativa hab", 
            "Notaría Escritura Alternativa hab", "Matricula Inmobiliaria Alternativa hab", 
            "Desembolso 1", "A favor de 1", "Cedula o Nit 1", "Tipoiddesembolso1", 
            conceptodesembolso1, "De 1D", "Desembolso 2", "A favor de 2", 
            "Cedula o Nit 2", "Tipoiddesembolso2", conceptodesembolso2, "De 2D", 
            "Desembolso 3", "A favor de 3", "Cedula o Nit 3", "Tipoiddesembolso3", 
            conceptodesembolso3, "De 3D", "Desembolso 4", "A favor de 4", 
            "Cedula o Nit 4", "Tipoiddesembolso4", conceptodesembolso4, "De 4D", 
            "CHIP_Alternativa", "CHIP_Alterntativa_Mayor_Extension", "bol_Afec_Vivienda_Familiar", 
            "bol_Afec_Ambiental", "bol_Cabida_Linderos", "bol_Condicion_Resolutoria", 
            "bol_Embargo", "bol_Hipoteca", "bol_Patrimonio_Familia", "bol_Servidumbre", 
            "bol_Sucesion", "bol_Usufructo"
            from estudio_titulos where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="estudio_511">
        <sql>
            select "Nro", "IDENTIFICADOR", "ConsecutivoReas", "De", "De 2", date("Fecha Estudio de Titulos") as "Fecha Estudio de Titulos", 
            (select "Des_Opcion" from "tbl_Campos_Auxiliares" where "Cod_Tabla"=47 and  "Cod_Tipo_Tenencia"="Cod_Opcion" ) as "Cod_Tipo_Tenencia",
            (select date("Fecha de Ingreso al Proceso")  from definitiva where definitiva."IDENTIFICADOR"= "tbl_Estudio_Titulos_511"."IDENTIFICADOR" ) as "Fecha de Ingreso al Proceso" ,
            (select "Concepto de Ingreso"  from definitiva where definitiva."IDENTIFICADOR"= "tbl_Estudio_Titulos_511"."IDENTIFICADOR" ) as "Concepto de Ingreso" ,
            "Tipo Documento Tenencia", "Notaria Predio en riesgo", 
            "Nro Documento Tenencia Predio en Riesgo", "Fecha Documento Tenencia", 
            "Nombre Vendedor Predio Alto Riesgo", "Matricula Inmobiliaria Predio en Riesgo", 
            "Descripción Inmueble", "Area predio en Riesgo según Documento Tenencia", 
            "Area predio según DACD", "Norte", "Sur", "Oriente", "Occidente", 
            "Descripción de la Tradicción", "Fecha CLT", "Turno CLT", "Fotocopias de Cédulas", 
            "Escritura Pública", "Promesa de Compraventa o permuta", "Boletín Catastral", 
            "Certificado de Nomenclatura", "Certificado de Libertad y Tradición", 
            "Servicios Públicos", "Declaraciones Extrajuicio", "Certificado Junta de Acción Comunal", 
            "Limitaciones al Dominio", "Gravamenes", "Medidas Cautelares", 
            "Condiciones Resolutorias", "Otros", "Observaciones", "Elaborado por", 
            "Revisado por", "Procede", "Fecha de Notificación", "Aceptación", 
            "Fecha Cesión", "Fecha reparto notaría Minuta predio en riesgo", 
            "Notaria de Reparto minuta predio en riesgo", "Nro de Escritura venta predio en riesgo", 
            "Fecha Escritura venta predio en riesgo", "Firma escritura Venta predio en riesgo", 
            "Fecha promesa de compraventa", "Nro Escritura Alternativa hab", 
            "Fecha Escrituración Alternativa hab", "Notaría Escritura Alternativa hab", 
            "Matricula Inmobiliaria Alternativa hab", "Desembolso 1", "A favor de 1", 
            "Cedula o Nit 1", "Tipoiddesembolso1", conceptodesembolso1, "De 1D", 
            "Desembolso 2", "A favor de 2", "Cedula o Nit 2", "Tipoiddesembolso2", 
            conceptodesembolso2, "De 2D", "Desembolso 3", "A favor de 3", 
            "Cedula o Nit 3", "Tipoiddesembolso3", conceptodesembolso3, "De 3D", 
            "Desembolso 4", "A favor de 4", "Cedula o Nit 4", "Tipoiddesembolso4", 
            conceptodesembolso4, "De 4D", "CHIP_Alternativa", "CHIP_Alterntativa_Mayor_Extension"
            from  "tbl_Estudio_Titulos_511" where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="ConsultaUsuarioByCorreo">
        <sql>
            select 
            usuario_usuario as usuario_usuario,
            usuario_nombre as usuario_nombre,
            usuario_id as usuario_id,
            usuario_pwd as usuario_pwd,
            usuario_user as usuario_user,
            usuario_time as usuario_time,
            usuario_user_upd as usuario_user_upd,
            usuario_time_upd as usuario_time_upd,
            usuario_correo as usuario_correo,
            usuario_cargo as usuario_cargo,
            usuario_activo as usuario_activo,
            usuario_fecha_vigencia::date as usuario_fecha_vigencia,
            tius_id as tius_id,
		
            (select array_to_string(array_agg(funcionalidades),',') from (
            select tifunc_id as funcionalidades
            from Usuario ud 
            join tipo_usuario_funcionalidad tuf on 
            ud.tius_id=tuf.tius_id 
            where ud.usuario_usuario = u.usuario_usuario
            UNION
            select tifunc_id as funcionalidades
            from Usuario usua
            join usuario_funcionalidad usfunc on usua.usuario_id=usfunc.usuario_id 
            where usua.usuario_usuario = u.usuario_usuario) a
            ) as funcionalidades,			    
		
            '' as municipios,
            '' as regionales,
            encode(hmac(usuario_usuario,usuario_nombre, 'sha1'),'hex') as codigo
            
            from 
            Usuario u
            where 
            usuario_correo = '@CORREO'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="ConsultaUsuarioByNombre">
        <sql>
            select 
            usuario_usuario as usuario_usuario,
            usuario_nombre as usuario_nombre,
            usuario_id as usuario_id,
            usuario_pwd as usuario_pwd,
            usuario_user as usuario_user,
            usuario_time as usuario_time,
            usuario_user_upd as usuario_user_upd,
            usuario_time_upd as usuario_time_upd,
            usuario_correo as usuario_correo,
            usuario_cargo as usuario_cargo,
            usuario_contrato as usuario_contrato,
            usuario_activo AND (usuario_fecha_vigencia &gt;= current_date) as usuario_activo,
            usuario_fecha_vigencia as usuario_fecha_vigencia,
            tius_id as tius_id,
		
            (select array_to_string(array_agg(funcionalidades),',') from (
            select tifunc_id as funcionalidades
            from Usuario ud 
            join tipo_usuario_funcionalidad tuf on 
            ud.tius_id=tuf.tius_id 
            where ud.usuario_usuario = u.usuario_usuario
            UNION
            select tifunc_id as funcionalidades
            from Usuario usua
            join usuario_funcionalidad usfunc on usua.usuario_id=usfunc.usuario_id 
            where usua.usuario_usuario = u.usuario_usuario) a
            ) as funcionalidades,			    
		
            '' as municipios,
            '' as regionales,
            encode(hmac(usuario_usuario,usuario_nombre, 'sha1'),'hex') as codigo
            
            from 
            Usuario u
            where 
            usuario_usuario = '@USUARIO'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="paz_salvos">
        <sql>
            select * from definitiva
            WHERE "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <!--consulta id caracoli paimes-->    
    <Consulta id="obtener_caracoli_id">
        <sql>
            SELECT num_sdh, direccion, nom1, nom2, ape1, ape2, 
            cedula
            FROM caracoli.caracoli
            WHERE num_sdh::varchar not in (select "IDENTIFICA_ANTERIOR" FROM public.definitiva where "IDENTIFICA_ANTERIOR" is not null )
           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <!--FIN consulta id caracoli paimes-->    
    <!--creacion expediente-->
    <Consulta id="crear_proceso_identificador">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"= '@identificador2' OR  "IDENTIFICA_ANTERIOR"= '@identificador2'
            ),
            unidades as (
            INSERT INTO "tbl_Unds_Habitacionales" ("Identificador","Num_Und_Habitacional")
            SELECT '@identificador2',@unidades
            WHERE NOT EXISTS (select 1 from sel )
            returning "Identificador"	
            ),
            ins as(
            INSERT INTO definitiva("IDENTIFICADOR","IDENTIFICA_ANTERIOR","Barrio","Localidad","MZ","LT","Sector","Concepto de Ingreso","Fecha de Ingreso al Proceso","Cod_Estado_Proceso","Cod_Estado_Subproceso" )
            SELECT '@identificador2','@identificador2' ,'@barrio','@localidad','@manzana','@lote','@sector','@concepto','@fecha_ingreso',1,11
            WHERE NOT EXISTS (select 1 from sel )
            returning "IDENTIFICADOR"	
            )
            select * from ins      
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>    
      
  
    <!--consulta de la ficha social-->
    <Consulta id="informacion_ficha_social">
        <sql>
            SELECT 
            "IDENTIFICADOR", "IDENTIFICA_ANTERIOR", "Localidad", "UPZ", "Sector", 
            "Barrio", "Dirección", "MZ", "LT",           
            "Concepto de Ingreso",fecha_concepto_ingreso,                  
            gusto_ubicacion_par, gusto_vivienda, gusto_vecindario_par, tiempo_zona_par, 
            tipo_tiempo_zona_par, salida_par, porque_salida_par, importancia_zona_proyecto_vida, 
            porque_importancia_proyecto_vida, mascota, cuantos_tipo, observaciones, 
            tipo_vivienda, otro_tipo_vivienda, documento_tenencia, otro_doc_tenencia, 
            num_pisos_par, num_habitaciones_par, num_banos_par, num_cocinas_par, 
            servicio_acueducto, servicio_energia, servicio_gas, afectacion_patrimonio_familiar, 
            identificador, tipo_familia, id_profesional, fecha_cargue, id_arraigo, 
            tiene_desktop, cantidad_desktop, uso_desktop, tiene_portatil, 
            catidad_portatiles, uso_portatiles, frecuencia_uso_computador, 
            tiene_tablet, cantidad_tablet, uso_tablet, sitio_uso_computador, 
            frecuencia_uso_internet, dispositivo_acceso_internet, objetivo_uso_internet, 
            pertenencia_organizaciones, razon_no_pertenencia, reuniones_organizacion, 
            caracter_organizacion, miembros_organizacion, acudiente_problemas_personales, 
            acudiente_problemas_economicos, lugares_cercanos_vivienda, problemas_sector_vivienda, 
            clasificacion_basuras, practica_consumo_servicios, impacto_materia_paredes, 
            material_pisos, material_paredes, id_usuario, upd_time, tenencia_predio, 
            ingreso_promedio, egreso_promedio, bl_trabajo, cual_trabajo, 
            bl_experiencia, experiencia, bl_moto, num_motos, bl_carro, num_carros, 
            bl_bici, num_bicicletas, consumo_acueducto, consumo_gas, consumo_energia, 
            principal_uso_computador, unidades_identificadas, estado_ficha, 
            version_ficha, tipo_mascota, id_usuario_revision, fecha_revision, 
            destinacion_par, actividad_formalizada, razon_social, otros_propietarios, 
            ubicacion_clientes, valor_desarrollo_actividad, produccion_mensual, 
            valor_herramientas, num_empleados, area_actividad, conciencia_riesgo, 
            comentarios_ficha, actividad_par,
            (select usuario_usuario from usuario where usuario_id=id_usuario_revision) as usuario_revision,             
            (select usuario_nombre from usuario where usuario_id=id_usuario) as usuario_nombre,             
            (select usuario_contrato from usuario where usuario_id=id_usuario) as usuario_contrato                           
            FROM  definitiva FULL JOIN tbl_arraigo_vivienda 
            ON "IDENTIFICADOR"=identificador                 
            WHERE "IDENTIFICADOR"='@identificador'    
                       
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="informacion_ficha_social_mimebros">
        <sql>            
            Select * from "tbl_Miembros" as  m ,tbl_miembro_caracterizacion as c
            where "Identificador"='@identificador'
            and m.id_miembro=c.id_miembro  order by "Orden"         
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="id_miembros">
        <sql>            
            Select id_miembro from "tbl_Miembros" 
            where "Identificador"='@identificador'    
            order by "Orden"                 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="informacion_ficha_social_mimebros_dos">
        <sql>            
            Select * from "tbl_Miembros" 
            where "Identificador"='@identificador'    
            order by "Orden"                 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
   
    
    <Consulta id="saludar">
        <sql>
            select 'hola ' || '@nombre' ;           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>

    
    <Consulta id="consulta_unidades_hijos">
        <sql>
            with padre as (
            select  id_familia, "IDENTIFICADOR", "IDENTIFICA_ANTERIOR" from    definitiva
            where "IDENTIFICADOR" ='@identificador'           
            ),
            hijos as(
            select id_familia,  "IDENTIFICADOR" as identificador
            from    definitiva
            where id_padre =(select id_familia from padre)  
            )
            select  * from hijos
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_unidades_tabla">
        <sql>         
            SELECT "Num_Und_Habitacional"
            FROM public."tbl_Unds_Habitacionales"
            WHERE "Identificador"='@identificador'           
            limit 1 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>  
    <Consulta id="consulta_solicitudes">
        <sql>
            select  * from  solicitud_unidad_habitacional uni ,  definitiva def 
            where "IDENTIFICADOR" ='@identificador'
            and uni.id_padre=id_familia 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="crear_solicitud_unidad_habitacional">
        <sql>
            with padre as (
            select  * from    definitiva
            where "IDENTIFICADOR" ='@identificador'           
            ),
            hijo as(
            INSERT INTO definitiva("IDENTIFICADOR","IDENTIFICA_ANTERIOR","Barrio","Localidad","MZ","LT","Sector","Concepto de Ingreso","Fecha de Ingreso al Proceso" ,"Cod_Estado_Proceso","Cod_Estado_Subproceso")
            values(date_part('year', CURRENT_DATE)||'-'||SUBSTRING ((select "Localidad" from padre) FROM 1 for 2)||'-'||nextval('sec_identificador'),(select "IDENTIFICA_ANTERIOR" from padre)   
            ,(select "Barrio" from padre),(select "Localidad" from padre),(select "MZ" from padre),(select "LT" from padre),(select "Sector" from padre),(select "Concepto de Ingreso" from padre),
            CURRENT_DATE,1,11)          
            returning id_familia	
            
            ),soli as (
            INSERT INTO solicitud_unidad_habitacional(
            id_padre, unidad_habitacional, viabilidad_tecnica, fecha_creacion, 
            viabilidad_social, id_nueva_unidad,unidad_creada)
            VALUES ((select id_familia from padre),@unidad, '@viabilidad_tecnica', CURRENT_DATE, '@viabilidad_social', (select id_familia from hijo),,true)
            returning id_nueva_unidad
            )
            select * from soli
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo> 
    </Consulta> 
    <Consulta id="crear_solicitud_unidad_habitacional_antiguos">
        <sql>
            with padre as (
            select  * from    definitiva
            where "IDENTIFICADOR" ='@identificador'           
            ),
            hijo as(
            INSERT INTO definitiva("IDENTIFICADOR","IDENTIFICA_ANTERIOR","Barrio","Localidad","MZ","LT","Sector","Concepto de Ingreso","Fecha de Ingreso al Proceso" ,"Cod_Estado_Proceso","Cod_Estado_Subproceso")
            values(date_part('year', CURRENT_DATE)||'-'||SUBSTRING ((select "Localidad" from padre) FROM 1 for 2)||'-'||nextval('sec_identificador'),(select "IDENTIFICA_ANTERIOR" from padre) 
            ,(select "Barrio" from padre),(select "Localidad" from padre),(select "MZ" from padre),(select "LT" from padre),(select "Sector" from padre),(select "Concepto de Ingreso" from padre),
            CURRENT_DATE,1,11)          
            returning id_familia	
            
            ),soli as (
            INSERT INTO solicitud_unidad_habitacional(
            id_padre, unidad_habitacional, viabilidad_tecnica, fecha_creacion, 
            viabilidad_social, id_nueva_unidad)
            VALUES ((select id_familia from padre),@unidad, '@viabilidad_tecnica', CURRENT_DATE, '@viabilidad_social', (select id_familia from hijo))
            returning id_nueva_unidad
            )
            select * from soli
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo> 
    </Consulta> 
    
    <Consulta id="crear_identificador_temporal">
        <sql>
            WITH 
            sel as (
            Select "IDENTIFICADOR" from definitiva where "IDENTIFICADOR"= '@identificador2' OR  "IDENTIFICA_ANTERIOR"= '@identificador2'
            ),
            unidades as (
            INSERT INTO "tbl_Unds_Habitacionales" ("Identificador","Num_Und_Habitacional")
            SELECT '@identificador2',@unidades
            WHERE NOT EXISTS (select 1 from sel )
            returning "Identificador"	
            ),
            ins as(
            INSERT INTO definitiva("IDENTIFICADOR","IDENTIFICA_ANTERIOR","Barrio","Localidad","MZ","LT","Sector","Concepto de Ingreso","Fecha de Ingreso al Proceso" ,"Cod_Estado_Proceso","Cod_Estado_Subproceso")
            SELECT '@identificador2','@identificador2' ,'@barrio','@localidad','@manzana','@lote','@sector','@concepto','@fecha_ingreso',1,11
            WHERE NOT EXISTS (select 1 from sel )
            returning "IDENTIFICADOR"	
            )
            select * from ins      
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta> 
    
    <Consulta id="informacion_cuenta_ahorro">
        <sql>
            select * from cuenta_ahorro_programado
            where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_archivo_cuentas">
        <sql>
            select * from documento_adjunto
            where tidoc_id=2
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="obtener_upz">
        <sql>
            select * from upz where localidad_id='@id_loca'           
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="obtener_sector">
        <sql>
            select distinct upper("Sector") as sector from definitiva where "Sector" is not null and "Sector"!='' and upper("Localidad") like '%@localidad%' and upper("UPZ") like '%@upz%';     
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="obtener_quebradas">
        <sql>
            select * from quebradas            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_grupos_tipo_documento">
        <sql>
            SELECT row_to_json(grps) AS grupos
            FROM (
            SELECT a.grudoc_id
            ,a.grudoc_desc
            ,(
            SELECT json_agg(sub)
            FROM (
            SELECT grudoc_id
            ,grudoc_desc
            FROM tipo_grupo_documento
            WHERE grudoc_grupo_padre_id = a.grudoc_id
            ) sub
            ) AS sub_grupos
            FROM tipo_grupo_documento AS a
            WHERE grudoc_grupo_padre_id IS NULL
            ) grps;

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_resumen_documentos_por_id">
        <sql>
            select 
            grudoc_id as id, 
            grudoc_desc as name, 
            grudoc_grupo_padre_id as parent
            ,CASE WHEN grudoc_grupo_padre_id is null THEN 
            (
            SELECT count(*)
            FROM documento_adjunto d
            JOIN tipo_documento t ON t.tidoc_id = d.tidoc_id
            JOIN tipo_grupo_documento h ON t.grudoc_id = h.grudoc_id
            JOIN tipo_grupo_documento p ON h.grudoc_grupo_padre_id = p.grudoc_id
            WHERE identificador = '@identificador'
            AND tipo_grupo_documento.grudoc_id = p.grudoc_id
            )
            ELSE
            (
            SELECT count(*)
            FROM documento_adjunto d
            JOIN tipo_documento t ON t.tidoc_id = d.tidoc_id
            JOIN tipo_grupo_documento h ON t.grudoc_id = h.grudoc_id
            WHERE identificador = '@identificador'
            AND h.grudoc_id = tipo_grupo_documento.grudoc_id
            )
            END
            from tipo_grupo_documento 
            where 
            (select true from tipo_lista_doc_grupo_doc where tipo_lista_doc_grupo_doc.grudoc_id = tipo_grupo_documento.grudoc_id and tilisdoc_id = (select  case when (select "Sector" from definitiva where "IDENTIFICADOR" = '@identificador' ) ILIKE 'Vereditas' THEN 2 ELSE 1 END) )
            --(select tilisdoc_id = (case when (select "Sector" from definitiva where "IDENTIFICADOR" = '@identificador' ) ILIKE 'Vereditas' THEN 2 ELSE 1 END) from tipo_lista_doc_grupo_doc where tipo_lista_doc_grupo_doc.grudoc_id = tipo_grupo_documento.grudoc_id)
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_resumen_grupos_tipo_documento_por_id">
        <sql>
            SELECT row_to_json(grps) AS grupos
            FROM (
            SELECT a.grudoc_id
            ,a.grudoc_desc
            ,(
            SELECT count(*)
            FROM documento_adjunto d
            JOIN tipo_documento t ON t.tidoc_id = d.tidoc_id
            JOIN tipo_grupo_documento h ON t.grudoc_id = h.grudoc_id
            JOIN tipo_grupo_documento p ON h.grudoc_grupo_padre_id = p.grudoc_id
            WHERE identificador = '@identificador'
            AND a.grudoc_id = p.grudoc_id
            )
            ,(
            SELECT json_agg(sub)
            FROM (
            SELECT grudoc_id
            ,grudoc_desc
            ,(
            SELECT count(*)
            FROM documento_adjunto d
            JOIN tipo_documento t ON t.tidoc_id = d.tidoc_id
            JOIN tipo_grupo_documento h ON t.grudoc_id = h.grudoc_id
            WHERE identificador = '@identificador'
            AND h.grudoc_id = tipo_grupo_documento.grudoc_id
            )
            FROM tipo_grupo_documento
            WHERE grudoc_grupo_padre_id = a.grudoc_id
            ) sub
            ) AS sub_grupos
            FROM tipo_grupo_documento AS a
            WHERE grudoc_grupo_padre_id IS NULL
            ) grps;


        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_tipos_documento">
        <sql>
            /*
            select tidoc_id, tidocdesc, 
            (
            select grudoc_id || '. ' || grudoc_desc
            from tipo_grupo_documento where tipo_grupo_documento.grudoc_id = tipo_documento.grudoc_id 
            ) as grudoc_desc
            from tipo_documento
            */
            SELECT tidoc_id, tidocdesc, tipo_grupo_documento.grudoc_id || '. ' || grudoc_desc as grudoc_desc
            FROM
            tipo_documento
            JOIN tipo_grupo_documento on tipo_grupo_documento.grudoc_id = tipo_documento.grudoc_id
            JOIN tipo_lista_doc_grupo_doc on tipo_lista_doc_grupo_doc.grudoc_id = tipo_grupo_documento.grudoc_id
            where tilisdoc_id = (case when (select "Sector" from definitiva where "IDENTIFICADOR" = '@identificador' ) ILIKE 'Vereditas' THEN 2 ELSE 1 END)

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_documentos_identificador">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha,
            doc_thumbnail thumbnail,
            coalesce( (select usuario_nombre from usuario where usuario_usuario = doc_user),doc_user) usuario,
            (select tidocdesc from tipo_documento where tipo_documento.tidoc_id = d.tidoc_id) tipo_documento,
            (select grudoc_desc  from tipo_grupo_documento where grudoc_id = (select grudoc_id  from tipo_documento where tipo_documento.tidoc_id = d.tidoc_id) ) grupo_documento,
            (select grudoc_id  from tipo_documento where tipo_documento.tidoc_id = d.tidoc_id) grudoc_id
            from 
            documento_adjunto d
            where identificador = '@identificador'


        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_img_identificador">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha,
            doc_thumbnail thumbnail
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%imagen%'

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_general">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id = '@tidoc_id'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>

    <Consulta id="consulta_pdf_visita_fallida">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%constancia visita fallida%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_acta_entrega">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id=7305
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_acta_entrega_vereditas">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id=240011
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_resolucion_vereditas">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%Resolucion Vereditas%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_resolucion_vur">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%Resolucion VUR%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_resolucion_vur_reas">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id =5103
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
        <Consulta id="consulta_pdf_ficha_social">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id =1301
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion = '@descripcion'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="consulta_pdf_acta_caracoli">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%Acta de notificación Caracolí%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    
    <Consulta id="consulta_pdf_est_documentos">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id =@tidoc_id
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    
    <Consulta id="consulta_pdf_acta_cierre_estudio_negativo">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%Acta de cierre Estudio Negativo%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>   
    
    <Consulta id="consulta_pdf_adenda">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like concat('%Adenda Estudio de Documentos id=%',@consecutivo)
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>   
    <Consulta id="consulta_pdf_escritura">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id=7104
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>       
        <Consulta id="consulta_pdf_fechas_reas">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and tidoc_id=@tipo_documento
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>   
        

    <Consulta id="consulta_img_entrega_par">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%Foto Entrega PAR%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_foto_Caracoli">
        <sql>
            select 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id,
            doc_descripcion descripcion,
            doc_ruta nombre,
            to_char(doc_time,'dd-mm-yyyy HH:MM') fecha           
            from 
            documento_adjunto d
            where identificador = '@identificador' and doc_descripcion like '%@descripcion%'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_est_doc_tipo">
        <sql>
            select tipo_estudio,consecutivo,procede
            from procesos.est_documentos 
            where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_datos_usuario_encargado_est_documentos">
        <sql>
            select fecha_creacion,usuario_nombre,usuario_correo from procesos.actividad pa natural join procesos.proceso 
            inner join usuario us on
            us.usuario_id=pa.asignado_a
            where identificador ='@identificador' and id_tipo_actividad=2 and estado=1
            order by id_actividad desc limit 1;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_datos_correo">
        <sql>
            select usuario_nombre as nombre, 
            (select usuario_correo as correo from usuario where usuario_id=@to)
            from usuario where usuario_id=@from
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
<Consulta id="consulta_concepto">
        <sql>
            select * from "tbl_Origen" where "Identificador" = '@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
 <Consulta id="consulta_concepto_texto">
        <sql>
            select identificador,STRING_AGG(concat,', ')as texto from (
            select identificador,concat_ws(' del ',concepto_ingreso,fecha_concepto)as concat
            from concepto_ingreso 
            where identificador= '@identificador') as sub1
            group by identificador; 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>   
    

    
    <Consulta id="habilitar_ficha_visita_fallida">
        <sql>
            update visitas_fallidas set habilitar_ficha=true where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_datos_correo_masivo">
        <sql>
            select usuario_nombre as nombre, 
            (select usuario_correo as correo from usuario where usuario_usuario='@UsersTo'),
            (select usuario_nombre as nombre1 from usuario where usuario_usuario='@UsersTo')
            from usuario where usuario_usuario='@UserFrom';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_img_repositorio">
        <sql>
            delete from documento_adjunto where doc_descripcion = concat('imagen910','@key') and identificador='@identificador' RETURNING *

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf_repositorio">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'constancia visita fallida' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf">
        <sql>
            delete from documento_adjunto where doc_descripcion = '@descripcion' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf_acta_entrega_par">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Documento acta de entrega PAR' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf_acta_entrega_par_vereditas">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Documento acta de entrega PAR Vereditas' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf_resolucion_vur">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Resolucion Vereditas' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_acta_caracoli">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Acta de notificación Caracolí' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>    
    <Consulta id="delete_pdf_est_documentos">
        <sql>
            delete from documento_adjunto where tidoc_id=@tidoc_id and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="delete_pdf_acta_cierre_estudio_negativo">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Acta de cierre Estudio Negativo' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta> 
       
    <Consulta id="delete_pdf_adenda">
        <sql>
            delete from documento_adjunto where doc_descripcion = concat('Adenda Estudio de Documentos id=',@consecutivo) and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_pdf_escrituras">
        <sql>
            delete from documento_adjunto where tidoc_id = 7104 and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>  
    <Consulta id="delete_pdf_fechas_reas">
        <sql>
            delete from documento_adjunto where tidoc_id=@tipo_documento and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>     

    <Consulta id="delete_img_entrega_par">
        <sql>
            delete from documento_adjunto where doc_descripcion = 'Foto Entrega PAR' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="delete_img_caracoli">
        <sql>
            delete from documento_adjunto where doc_descripcion = '@descripcion' and identificador='@identificador' RETURNING *
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="verificar_identificador">
        <sql>
            SELECT 
            "IDENTIFICADOR"  , "Cod_Estado_Proceso", "Cod_Estado_Subproceso"
            FROM 
            definitiva 
            WHERE 
            "IDENTIFICADOR"='@identificador_idiger'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="verificar_identificador_anterior">
        <sql>
            SELECT 
            "IDENTIFICADOR"  , "Cod_Estado_Proceso", "Cod_Estado_Subproceso"
            FROM 
            definitiva 
            WHERE 
            "IDENTIFICA_ANTERIOR"='@identificador_anterior'
            OR 
            "IDENTIFICADOR"='@identificador_anterior'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="set_estado_ficha_tecnica">
        <sql>
            update ficha_reconocimiento_v1 set estado=@estado where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_binario_documento_adjunto">
        <sql>
            SELECT 
            doc_ruta, 
            doc_id,
            EXTRACT(year FROM doc_time ) "year", 
            EXTRACT(month FROM doc_time ) "month", 
            EXTRACT(day FROM doc_time ) "day",
            identificador  
            FROM 
            documento_adjunto 
            WHERE 
            encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') = '@ID';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_datos_estudio_255_antiguo">
        <sql>
            select "Fecha Estudio de Titulos","Elaborado por" ,"Revisado por","Aprobado por" ,"Procede" from estudio_titulos where "IDENTIFICADOR" ='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="get_datos_estudio_511_antiguo">
        <sql>
            select "Fecha Estudio de Titulos","Elaborado por" ,"Revisado por","Procede" from "tbl_Estudio_Titulos_511" where "IDENTIFICADOR" ='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <!--informacion de la ficha social para la version 7--> 
    <Consulta id="info_ficha_social_v7">
        <sql>            
            SELECT "IDENTIFICADOR",fecha_concepto_ingreso
            ,"Dirección"
            ,"Localidad"
            ,"Barrio"
            ,"MZ",
            "LT"
            ,"Concepto de Ingreso"
            ,(select row_to_json( b) from  (select json_agg(m.* order by "Orden") as basica,json_agg(c.* order by "Orden") as caracterizacion from "tbl_Miembros" m   left join tbl_miembro_caracterizacion c on m.id_miembro=c.id_miembro where "Identificador"=a."IDENTIFICADOR" ) b)as miembros
            ,v.*
            FROM definitiva a left join  tbl_arraigo_vivienda v on identificador=a."IDENTIFICADOR"
            WHERE a."IDENTIFICADOR"='@identificador' 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    <Consulta id="tipo_ficha_impresion">
        <sql>            
            SELECT version_ficha
            FROM definitiva a left join  tbl_arraigo_vivienda v on identificador=a."IDENTIFICADOR"
            WHERE a."IDENTIFICADOR"='@identificador' 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="conexion_repositorio">
        <sql>
            --Debe ir vacío
        </sql>
        <conexion>repositorio_documental</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    <Consulta id="consulta_lista_chequeo">
        <sql>
            select 
            grudoc_id id
            ,grudoc_desc as "text"
            ,grudoc_grupo_padre_id parent 
            /*,floor(random() * 100 ) progress*/
            ,case when grudoc_id &lt; 10 then 100 - ((grudoc_id-1)*10) - floor(random() * 10 ) else 100 end progress
            from tipo_grupo_documento 
            /*union
            select 
            tidoc_id id
            ,tidocdesc as "text"
            ,grudoc_id parent
            ,0 progress
            from tipo_documento 
            */
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
    </Consulta>
    
    
    <Consulta id="reporte_datos_completos">
        <sql>
            SELECT "IDENTIFICADOR" AS "Identificador"
            ,"Localidad"
            ,"UPZ"
            ,"Sector"
            ,"Barrio"
            ,"Dirección"
            ,"MZ" AS "Manzana"
            ,"LT" AS "Lote"
            ,"Telefono"
            ,"Nombre 1"
            ,"Cedula 1"
            ,"Nombre 2"
            ,"Cedula 2"
            ,"Fecha de Ingreso al Proceso" AS "FechaIngresoAlProceso"
            ,"Concepto de Ingreso" AS "ConceptoDeIngreso"
            ,"Nro Cédula Catastral" AS "CedulaCatastral"
            ,"Código Chip Catastro" AS "CHIP"
            ,cuenta_codensa AS "CuentaCODENSA"
            ,estado_codensa AS "EstadoCODENSA"
            ,fecha_solictud_codensa AS "FechaSolicitudCodensa"
            ,fecha_paz_salvo_codensa AS "FechaPazYSalvoCodensa"
            ,cuenta_acueducto AS "CuentaAcueducto"
            ,estado_acueducto AS "EstadoAcueducto"
            ,fecha_solictud_acueducto AS "FechaSolicitudAcueducto"
            ,fecha_paz_salvo_acueducto AS "FechaPazYSalvoAcueducto"
            ,cuenta_gas AS "CuentaGas"
            ,estado_gas AS "EstadoGas"
            ,fecha_solictud_gas AS "FechaSolicitudGas"
            ,fecha_paz_salvo_gas AS "FechaPazYSalvoGas"
            ,"Fecha acta de entrega alternativa habitacional"
            ,"Fecha de Verificación de Traslado"
            ,"Año de Reporte"
            ,"Fecha Acta de entrega predio en riesgo a CVP"
            ,"Solicitud Adecuación del Predio a DPAE"
            ,"Notificación Adecuación Predio en Alto riesgo"
            ,"Fecha Entrega predio en riesgo al DADEP"
            ,"Observaciones"
            ,"Predio demolido"
            ,"Fecha ficha predial"
            ,"fecha_traslado_inicial" AS "FechaTrasladoInicial"
            ,"Fec_Notificacion_Alcaldia_Vigilancia_PAR" AS "FechaNotificacionAlcaldiaVigilanciaPAR"
            ,(
            SELECT (CASE WHEN df."Cod_Estado_Proceso" &lt; 10 THEN '0' || te."Cod_Estado_Proceso"::text ELSE te."Cod_Estado_Proceso"::text END ) || '-' || "Des_Estado_Proceso"
            FROM "tbl_Estados_Procesos" te
            WHERE te."Cod_Estado_Proceso" = df."Cod_Estado_Proceso"
            ) AS "EstadoProceso"
            ,(
            SELECT "Des_Estado_Subproceso"
            FROM "tbl_Estados_Subprocesos" te
            WHERE te."Cod_Estado_Subproceso" = df."Cod_Estado_Subproceso"
            ) AS "SubEstadoProceso"
            ,"id_surr_idiger" AS "IdentificadorIDIGER"
            ,"Num_Ficha_Social" AS "FichaSocial"
            ,"Num_Ficha_Tecnica" AS "FichaTecnica"
            ,(CASE WHEN ("Cod_Estado_Proceso" in (8,13) or "Cod_Estado_Subproceso" in (72) ) THEN
            CASE 
            WHEN "Fecha de Verificación de Traslado" IS NOT NULL THEN
            to_char("Fecha de Verificación de Traslado", 'yyyy')
            WHEN "Año de Reporte" IS NOT NULL THEN 
            "Año de Reporte"
            ELSE 'Sin Información' END
            ELSE 'No reasentado' END
            ) as "Fecha Reasentamiento"
            FROM definitiva df
            LEFT JOIN "tbl_Enlace_SURR" ts ON df."IDENTIFICADOR" = ts."Identificador"
            WHERE upper(COALESCE(NULLIF("Sector", ''), '0')) NOT LIKE '%VEREDITAS%';


        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    <Consulta id="reporte_pivote_estados">
        <sql>
            select
            "Localidad",
            "Sector",
            "Des_Estado_Proceso" as "EstadoProceso",
            "Des_Estado_Subproceso" as "SubEstadoProceso",
            to_char("Fecha Acta de entrega predio en riesgo a CVP",'yyyy/mm/dd') AS "FechaEntregaPAR",
            count(*)
            from definitiva
            JOIN "tbl_Estados_Procesos" te ON te."Cod_Estado_Proceso" = definitiva."Cod_Estado_Proceso"
            JOIN "tbl_Estados_Subprocesos" se ON se."Cod_Estado_Subproceso" = definitiva."Cod_Estado_Subproceso"
            group by "Localidad", "Sector", "Des_Estado_Proceso", "Des_Estado_Subproceso" , to_char("Fecha Acta de entrega predio en riesgo a CVP",'yyyy/mm/dd')
            order by "Localidad", "Sector", "Des_Estado_Proceso"


        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="reporte_pivote_usuarios">
        <sql>
            select tius_desc, usuario_nombre, to_char("timestamp",'yyyy/mm/dd') as date, count(*) from log_usuario l join usuario u on l.usuario = u.usuario_usuario join tipo_usuario t on u.tius_id = t.tius_id

            group by tius_desc, usuario_nombre, to_char("timestamp",'yyyy/mm/dd') 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    
    
    <Consulta id="reporte_pivote_caracoli">
        <sql>
            select 
            caracoli.num_sdh
            ,fecha_acta 
            ,num_acta 
            ,direccion
            ,nom1 
            ,nom2 
            ,ape1 
            ,ape2 
            ,cedula 
            ,tel1 
            ,tel2 
            ,calidad_habita 
            ,calidadhabitaotro 
            ,residia_antes 
            ,residiaantesdonde 
            ,residiaanteszona 
            ,desea_retornar 
            ,desearetornarpq 
            ,hay_embarazadas 
            ,enf_respiratoria
            --enfrespiratoriacausa,
            ,ocuhabitada 
            ,ocuconsolidado 
            ,ocuprovisional 
            ,CASE WHEN usocomercial = 'Si' AND usoresidencial = 'Si' THEN 'Mixto' 
            WHEN usocomercial = 'Si' THEN 'Comercial'
            WHEN usoresidencial = 'Si' THEN 'Residencial'
            ELSE 'No Definido' END as uso
            ,usocomercial
            ,usoresidencial
            ,mas_viv 
            ,masvivnum 
            ,num_pisos 
            ,hay_ani 
            ,tip_ani 
            ,tipaniotro 
            ,can_peligro
            ,canpeligroraza 
            ,hay_esp_prod 
            ,hayespprodcual 
            ,observaciones 
            ,json_agg(familia) as miembros
            FROM
            caracoli.caracoli 
            LEFT JOIN caracoli.familia ON caracoli.num_sdh = familia.num_sdh
            GROUP BY caracoli.num_sdh
            ,fecha_acta
            ,num_acta
            ,direccion
            ,nom1
            ,nom2
            ,ape1
            ,ape2,
            cedula ,
            tel1 ,
            tel2 ,
            calidad_habita ,
            calidadhabitaotro ,
            residia_antes ,
            residiaantesdonde ,
            residiaanteszona ,
            desea_retornar ,
            desearetornarpq ,
            hay_embarazadas ,
            enf_respiratoria ,

            ocuhabitada ,
            ocuconsolidado ,
            ocuprovisional ,
            usocomercial,
            usoresidencial,
            mas_viv ,
            masvivnum ,
            num_pisos ,
            hay_ani ,
            tip_ani ,
            tipaniotro ,
            can_peligro ,
            canpeligroraza ,
            hay_esp_prod ,
            hayespprodcual ,
            observaciones 

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
     
    <Consulta id="ficha_social_v7_consulta_datos_almacenados">
        <sql>
            SELECT "IDENTIFICADOR" AS identificador
            ,"Concepto de Ingreso" AS numero_concepto
            ,to_char(fecha_concepto_ingreso, 'DD/MM/YYYY') AS fecha_concepto
            ,"Dirección" AS direccion_par
            ,"MZ" AS manzana
            ,"LT" AS lote
            ,"Barrio" AS barrio
            ,"Localidad" AS localidad
            ,(
            SELECT tifam_desc
            FROM ficha_caracterizacion.tipo_familia
            WHERE tifam_id = tipo_familia
            ) AS tipo_familia
            ,(
            SELECT json_agg(miembros)
            FROM (
            SELECT 
            id_miembro
            ,"B05_Parentesco" AS parentesco
            ,primer_nombre AS primer_nombre
            ,segundo_nombre AS segundo_nombre
            ,"B01_Primer_Apellido" AS primer_apellido
            ,"B02_Segundo_Apellido"AS segundo_apellido
            ,to_char("B08_Fec_Nacimiento", 'dd/mm/yyyy') AS fecha_nacimiento
            FROM PUBLIC."tbl_Miembros"
            WHERE "IDENTIFICADOR" = "Identificador"
            ORDER BY "Orden"
            ) AS miembros
            ) AS miembros
            FROM definitiva
            LEFT JOIN ficha_caracterizacion.ficha_caracterizacion ON identificador = "IDENTIFICADOR"
            WHERE "IDENTIFICADOR" = '@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
        <es_dml_complejo>true</es_dml_complejo>
    </Consulta>
    <Consulta id="ficha_social_v7_consulta_tipo_famillia">
        <sql>
            SELECT 
            tifam_id as value,
            tifam_nombre as text
            from ficha_caracterizacion.tipo_familia
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>        
    </Consulta>
    
    <Consulta id="ficha_social_v7_consulta_tipo_parentesco">
        <sql>
            SELECT 
            tiparen_id as value,
            tiparen_desc as text
            from ficha_caracterizacion.tipo_parentesco
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>
       
    </Consulta>
    
    <!--consulta para servicios publicos-->
    <Consulta id="muestra_servicios">
        <sql>
            select
            tipo_servicio,
            consecutivo,
            cuenta,
            estado,
            fecha_paz_salvo,
            (select count(tipo_servicio) from servicio_publico sps where sps.identificador=spp.identificador  AND spp.tipo_servicio=sps.tipo_servicio ) as contador 
            from servicio_publico spp
            where identificador='@identificador' and consecutivo=1
            group by tipo_servicio , identificador, cuenta , estado,fecha_paz_salvo, consecutivo
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="informacion_servicios">
        <sql>
            select * from servicio_publico 
            where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="cuenta_servicios">
        <sql>
            select consecutivo from servicio_publico 
            where identificador='@identificador'
            AND tipo_servicio='@servicio'
            order by consecutivo DESC limit 1
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <!--FIN de consultas de servicios publicos-->
    <Consulta id="info_aprobacion_ficha">
        <sql>
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    
    
    <Consulta id="reporte_caracoli_listado_procedencias">
        <sql>
            select *
            from 
            (
            select residia_antes as procedencia, count(*) as total from caracoli.caracoli where residia_antes = 'En Bogotá' group by residia_antes
            union
            select 'No definido'::text as procedencia,count(*) from caracoli.caracoli where (residia_antes is null or residia_antes = ''  ) or (residia_antes = 'Fuera de Bogotá' and residiaantesdonde is null) or (residia_antes = 'Fuera de Bogotá' and residiaantesdonde = '')
            union
            select residiaantesdonde as procedencia, count(*) from caracoli.caracoli where residia_antes = 'Fuera de Bogotá' and residiaantesdonde is not null and residiaantesdonde &lt;&gt; '' group by residiaantesdonde
            ) a where total &lt;&gt; 1
            union
            select 'OTROS', count(*)
            from 
            (
            select residia_antes as procedencia, count(*) as total from caracoli.caracoli where residia_antes = 'En Bogotá' group by residia_antes
            union
            select 'No definido'::text as procedencia,count(*) from caracoli.caracoli where (residia_antes is null or residia_antes = ''  ) or (residia_antes = 'Fuera de Bogotá' and residiaantesdonde is null) or (residia_antes = 'Fuera de Bogotá' and residiaantesdonde = '')
            union
            select residiaantesdonde as procedencia, count(*) from caracoli.caracoli where residia_antes = 'Fuera de Bogotá' and residiaantesdonde is not null and residiaantesdonde &lt;&gt; '' group by residiaantesdonde
            ) a where total = 1
            order by total desc
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="reporte_caracoli_calidad_habita">
        <sql>
            select calidad_habita, count(*) as total from caracoli.caracoli where calidad_habita is not null and calidad_habita not in ('') group by calidad_habita
            union 
            select 'No definido', count(*) from caracoli.caracoli where calidad_habita is null or calidad_habita in ('') 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_usos">
        <sql>
            select uso,count(*) total
            from
            (
            select 
            CASE WHEN usocomercial = 'Si' and usoresidencial = 'Si' THEN 'Mixto'
            WHEN usocomercial = 'Si' THEN 'Comercial'
            WHEN usoresidencial = 'Si' THEN 'Residencial'
            ELSE 'No Definido'
            END uso
            from caracoli.caracoli 
            ) a group by uso
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_especies_produccion">
        <sql>
            select count(*) from caracoli.caracoli where hay_esp_prod = 'Si'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_piramide">
        <sql>
            select rango, count(*) total
            from
            (
            select 
            CASE WHEN date_part('year',age(now() ,fec_nac)) between 0 and 4 THEN '0-04 Pequeña infancia'
            WHEN date_part('year',age(now() ,fec_nac)) between 5 and 13 THEN  '05-13 Niñez'
            WHEN date_part('year',age(now() ,fec_nac)) between 14 and 17 THEN '14-17 Adolecencia'
            WHEN date_part('year',age(now() ,fec_nac)) between 18 and 35 THEN '18-35 Adultos Jóvenes'
            WHEN date_part('year',age(now() ,fec_nac)) between 36 and 64 THEN '36-64 Adultos'
            else '64 + Adultos Mayores'
            END rango
            from caracoli.familia NATURAL JOIN caracoli.caracoli where fec_nac is not null and (@filtro)
            ) a group by rango order by rango
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_total_ocupaciones">
        <sql>
            select count(*) total from caracoli.caracoli where @filtro
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="reporte_caracoli_total_desea_retornar">
        <sql>
            select count(*) total from caracoli.caracoli where desea_retornar = 'Si' and @filtro 
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_total_personas">
        <sql>
            select count(*) total from caracoli.familia natural join caracoli.caracoli where @filtro
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_hay_embarzadas">
        <sql>
            select count(*) total from caracoli.caracoli where hay_embarazadas = 'Si' and @filtro
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_enferm_respiratorias">
        <sql>
            select count(*) total from caracoli.caracoli where enf_respiratoria = 'Si' and @filtro
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="reporte_caracoli_animales">
        <sql>
            select count(*) total from caracoli.caracoli where hay_ani = 'Si' and @filtro
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="beneficiarios_principales">
        <sql>
            SELECT  "Nombre 1", "1er_Apellido_Ben1", 
            "2do_Apellido_Ben1", "1er_Nombre_Ben1", "2do_Nombre_Ben1", "Cedula 1", 
            "Nombre 2", "1er_Apellido_Ben2", "2do_Apellido_Ben2", "1er_Nombre_Ben2", 
            "2do_Nombre_Ben2", "Cedula 2"
            FROM public.definitiva
            WHERE "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    
    <Consulta id="reporte_tablero_indicadores_reas_piramide">
        <sql>
            select rango, count(*) total
            from
            (
            select 
            CASE WHEN date_part('year',age(now() ,"B08_Fec_Nacimiento")) between 0 and 4 THEN '0-04 Pequeña infancia'
            WHEN date_part('year',age(now() ,"B08_Fec_Nacimiento")) between 5 and 13 THEN  '05-13 Niñez'
            WHEN date_part('year',age(now() ,"B08_Fec_Nacimiento")) between 14 and 17 THEN '14-17 Adolecencia'
            WHEN date_part('year',age(now() ,"B08_Fec_Nacimiento")) between 18 and 35 THEN '18-35 Adultos Jóvenes'
            WHEN date_part('year',age(now() ,"B08_Fec_Nacimiento")) between 36 and 64 THEN '36-64 Adultos'
            else '64 + Adultos Mayores'
            END rango
            from public."tbl_Miembros" JOIN definitiva ON "IDENTIFICADOR" = "Identificador" where "B08_Fec_Nacimiento" is not null and (@filtro)
            ) a group by rango order by rango

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="consulta_usuarios">
        <sql>
            select usuario_nombre as nombre, usuario_usuario as usuario, (select tipo_usuario.tius_desc from tipo_usuario where tipo_usuario.tius_id = usuario.tius_id) as tipo from usuario where unaccent(usuario_nombre) @@ unaccent('@q') or usuario_nombre ilike '%@q%' or usuario_usuario ilike '%@q%' limit 10;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="consulta_identificador_mencion_comentario">
        <sql>
            select "IDENTIFICADOR" as  identificador, coalesce("Nombre 1",'') || ' ' || coalesce("1er_Apellido_Ben1",'') as beneficiario  from definitiva where "IDENTIFICADOR" ilike '%@q%' limit 10;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="consulta_comentarios_identificador">
        <sql>
            SELECT
            comen_id ,
            comen_desc,
            coalesce( (select usuario_nombre from usuario where usuario_usuario = comen_user),comen_user) comen_user ,
            to_char( comen_time, 'DD-MM-YYYY HH12:MI AM') comen_time,
            identificador ,
            encode(hmac(comen_id::text,comen_user, 'sha1'),'hex') as codigo 
            FROM comentarios 
            WHERE identificador = '@identificador'
            ORDER BY comen_time::timestamp desc, comen_id desc
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <!--concepto de afectacion ronda hidrica-->
    <Consulta id="traer_quebradas">
        <sql>           
            SELECT cod_quebrada, nombre_quebrada
            FROM public.quebradas
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    <Consulta id="info_reporte_hidrico">
        <sql>
            SELECT "IDENTIFICADOR" as identificador, consecutivo, dir_cat,man_cat, lot_cat, direccion_catastral, sector_catastro as sector, 
            (select nombre_quebrada from quebradas q where q.cod_quebrada =ah.cod_quebrada) as quebrada, fecha_reporte, id_usuario, "Código Chip Catastro" as chip , afectacion, "Nombre 1" as beneficiario,
            "Dirección" as direccion_db , (select usuario_nombre from usuario u where ah.id_usuario=u.usuario_id ) as usuario , (select usuario_contrato from usuario u where ah.id_usuario=u.usuario_id ) as contrato,
            (select encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id from documento_adjunto d where identificador = '@identificador' and tidoc_id=7 limit 1) as img_visor,
            (select encode(hmac(doc_id::text || '@SESSION_ID' ,doc_time::text, 'sha1'),'hex') id from documento_adjunto d where identificador = '@identificador' and tidoc_id=8 limit 1 ) as img_cobertura
            FROM definitiva left join  public.concepto_afectacion_hidrica ah  on ah.identificador="IDENTIFICADOR"
            left join ficha_reconocimiento_v1 fr  on fr.identificador="IDENTIFICADOR"
            WHERE  "IDENTIFICADOR"='@identificador'  order by consecutivo DESC limit 1
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    
    
    <!--psivos exigibles-->
    
    <Consulta id="info_pasivo_exigible">
        <sql>
            SELECT identificador, nombre, no_documento, profesional_reque, area_respo
            
            FROM public.pasivos_exigible_financiera
            where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>  
      <Consulta id="info_proceso_notificaciones">
        <sql>
            select *,
            CASE 
                  WHEN estado=1  THEN 'Tarea sin resolver'
                  WHEN estado=2  THEN 'Tarea cerrada'
            END as estado_notificacion,
            (select descripcion_tarea from procesos.tipo_actividad pt where pt.id_actividad=pa.id_tipo_actividad) as des_tarea,
            (select usuario_nombre from usuario where usuario_id=pa.creado_por) as creador,
            (select usuario_nombre from usuario where usuario_id=pa.asignado_a) as encargado
             from (
            select max(id_actividad)as id_actividad from procesos.actividad pa inner join procesos.proceso pp on pa.id_proceso=pp.id_proceso
            where pp.identificador='@identificador'  and id_tipo_proceso=1 and id_tipo_actividad!=4)as sub1 inner join procesos.actividad pa on sub1.id_actividad=pa.id_actividad
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>   
    <Consulta id="indice_tablas_escrituras">
        <sql>
        select *,tipo_alternativa as indice,'tbl_tip' as tbl from gestion_inmobiliaria.tipo_alternativa_escrituras 
        union
        select *,estado as indice, 'tbl_es' as tbl from gestion_inmobiliaria.estado_escrituras
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>    
    <Consulta id="traer_datos_escrituras">
        <sql>
        select * from gestion_inmobiliaria."Escrituras_AlternativaHabitacional" where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>       
    
    <Consulta id="save_escrituras">
        <sql>
        
        WITH 
        sel as (
        Select identificador from gestion_inmobiliaria."Escrituras_AlternativaHabitacional" where identificador='@identificador' 
        ),
        upd as(
        UPDATE gestion_inmobiliaria."Escrituras_AlternativaHabitacional"
        SET 	
        no_escritura='@no_escritura',
        fecha_escritura=CASE WHEN to_date('@fecha_escritura','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_escritura','YYYY MM DD') END,
        notaria='@notaria',
        matricula_inmo='@matricula_inmo',
        tipo_alternativa='@tipo_alternativa',
        estado='@estado',
        observaciones='@observaciones',
        escrituras_upd_user ='@usuario',
        escrituras_upd_time =current_timestamp
        WHERE identificador=(select identificador from sel)
        returning identificador
        ),ins as(
        INSERT INTO gestion_inmobiliaria."Escrituras_AlternativaHabitacional"(identificador,no_escritura,fecha_escritura,notaria,matricula_inmo,tipo_alternativa,estado,observaciones,escrituras_user,escrituras_time)
        SELECT '@identificador','@no_escritura',
            CASE WHEN to_date('@fecha_escritura','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@fecha_escritura','YYYY MM DD') END,
            '@notaria',
            '@matricula_inmo',
            '@tipo_alternativa',
            '@estado',
            '@observaciones',
            '@usuario',
            current_timestamp
        WHERE NOT EXISTS (select 1 from upd )
        returning identificador	
        )
        select * from upd union select * from ins;              

            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>      
    
    
    <Consulta id="1">
        <sql>
            UPDATE fichasocial.hogar
            SET 
                version=@version
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>      
    <Consulta id="2">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
                p2_1=@p2_1
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>   
     <Consulta id="7">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
                p7_1_1=@p7_1_1,
                p7_1_2=@p7_1_2
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>     
     <Consulta id="7a">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p7_7a='@p7_7a',
            p7_7b=@p7_7b,
            p7_8a='@p7_8a',
            p7_8b=@p7_8b,
            p7_9a='@p7_9a',
            p7_9b=@p7_9b,
            p7_010=@p7_010,
            p7_11_1='@p7_11_1',
            p7_11_2='@p7_11_2',
            p7_11_3='@p7_11_3',
            p7_11_4='@p7_11_4',
            p7_11_5=@p7_11_5,
            p7_11_6=@p7_11_6,
            p7_11_7=@p7_11_7,
            p7_11_8=@p7_11_8,
            p7_11_9=@p7_11_9,
            p7_11_010=@p7_11_010
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 
     <Consulta id="8">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p8_1a=@p8_1a,
            p8_1b='@p8_1b',
            p8_2=@p8_2,
            p8_3a=@p8_3a,
            p8_3b='@p8_3b',
            p8_4_1a='@p8_4_1a',
            p8_4_1b=@p8_4_1b,
            p8_4_2a='@p8_4_2a',
            p8_4_2b=@p8_4_2b,
            p8_4_3a='@p8_4_3a',
            p8_4_3b=@p8_4_3b,
            p8_5_1=@p8_5_1,
            p8_5_2=@p8_5_2,
            p8_5_3=@p8_5_3,
            p8_5_4=@p8_5_4,
            p8_6_1=@p8_6_1,
            p8_6_2=@p8_6_2,
            p8_7=@p8_7
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>     
     <Consulta id="9">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p9a=@p9a,
            p9b='@p9b'        
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>        
    <Consulta id="10">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p10_1='@p10_1'
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>  
    <Consulta id="p10_2">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p10_2='@p10_2'
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 

      <Consulta id="11">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p11_1a=@p11_1a,
            p11_1b=@p11_1b,
            p11_1c=@p11_1c,
            p11_1d=@p11_1d,
            p11_1e=@p11_1e,
            p11_1f=@p11_1f,
            p11_1g=@p11_1g,
            p11_1h=@p11_1h,
            p11_1i=@p11_1i,
            p11_1j=@p11_1j,
            p11_1k=@p11_1k,

            p11_2a=@p11_2a,
            p11_2b=@p11_2b,
            p11_2c=@p11_2c,
            p11_2d=@p11_2d,
            p11_2e=@p11_2e,
            p11_2f=@p11_2f,
            p11_2g=@p11_2g,
            p11_2h=@p11_2h,
        
   
            p11_3a=@p11_3a,
            p11_3b=@p11_3b,
            p11_3c=@p11_3c,
            p11_3d=@p11_3d,
            p11_3e=@p11_3e,
            p11_3f=@p11_3f,
            p11_3g=@p11_3g,
            p11_4a=@p11_4a,
            p11_4b=@p11_4b,
            p11_4c=@p11_4c,
            p11_4d=@p11_4d,
            p11_4e=@p11_4e,
            p11_4f=@p11_4f,
            p11_4g=@p11_4g
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                     
    <Consulta id="12">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p12_1_1a='@p12_1_1a',
            p12_1_1b=@p12_1_1b,
            p12_1_1c=@p12_1_1c,
            p12_1_2a='@p12_1_2a',
            p12_1_2b=@p12_1_2b,
            p12_1_2c=@p12_1_2c,
            p12_1_3a='@p12_1_3a',
            p12_1_3b=@p12_1_3b,
            p12_1_3c=@p12_1_3c    
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                
    <Consulta id="13">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p13_1='@p13_1',
            p13_2='@p13_2',
            p13_3='@p13_3',
            p13_4='@p13_4',
            p13_5a=@p13_5a,
            p13_5b='@p13_5b',
            p13_6a=@p13_6a,
            p13_6b='@p13_6b'    
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>    
    <Consulta id="14">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p14='@p14'
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 
    <Consulta id="15">
        <sql>
            UPDATE fichasocial.hogar
            SET 	
            p15='@p15'
            WHERE identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 
    <Consulta id="traer_datos_ficha_social">
        <sql>
        select * from fichasocial.hogar where identificador='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 
    <Consulta id="borrar_miembro_ficha_social">
        <sql>
        delete from fichasocial.miembros 
        where identificador='@identificador' and consecutivo = (select max(consecutivo) from fichasocial.miembros where identificador='@identificador')
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>  
    <Consulta id="2m">
        <sql>
            UPDATE fichasocial.miembros
            SET
            tipo_beneficiario='@tipo_beneficiario', 	
            p2_2=@p2_2,
            p2_3='@p2_3',
            p2_4='@p2_4',
            p2_5='@p2_5',
            p2_6='@p2_6',
            p2_7=CASE WHEN to_date('@p2_7','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@p2_7','YYYY MM DD') END,
            p2_8='@p2_8',
            p2_9=@p2_9,
            p2_010=CASE WHEN to_date('@p2_010','YYYY MM DD') = '0001-01-01 BC' THEN NULL ELSE to_date('@p2_010','YYYY MM DD') END,
            p2_011='@p2_011',
            p2_013=@p2_013,
            p2_014=@p2_014,
            condicion_miembro=@condicion_miembro
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>   
        <Consulta id="3m">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p3_1=@p3_1,
            p3_2=@p3_2,
            p3_3=@p3_3,
            p3_4=@p3_4,
            p3_5='@p3_5',
            
            p3_7='@p3_7',
            p3_8='@p3_8',
            p3_9='@p3_9',
            p3_010='@p3_010'
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta> 
        <Consulta id="4m">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p4_1=@p4_1,
            p4_2='@p4_2'
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>    
        <Consulta id="5m">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p5_1='@p5_1',
            p5_2='@p5_2',
            p5_3=@p5_3,
            p5_4a=@p5_4a,
            p5_4b='@p5_4b',
            p5_5='@p5_5'
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>      
        <Consulta id="6m">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p6_1='@p6_1',
            p6_2=@p6_2,
            p6_3='@p6_3',
            p6_4='@p6_4',
            p6_5='@p6_5'
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>  
    <Consulta id="7m">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p7_2=@p7_2,
            p7_3=@p7_3,
            p7_4='@p7_4',
            p7_5='@p7_5',
            p7_6a='@p7_6a',
            p7_6b=@p7_6b
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>     
    <Consulta id="boolean">
        <sql>
            UPDATE fichasocial.miembros
            SET 	
            p10_3=@p10_3,
            p10_4a='@p10_4a',
            p10_4b='@p10_4b', 
            p10_4c='@p10_4c',
            p10_4d='@p10_4d',
            p10_4e='@p10_4e',
            p10_4f='@p10_4f',
            p10_4g='@p10_4g',
         
            p10_4i='@p10_4i',
            p10_4j='@p10_4j',
            p10_4k='@p10_4k',
            p10_4l='@p10_4l',
            p10_5a='@p10_5a',
            p10_5b='@p10_5b',
            p10_5c='@p10_5c',
            p10_5d='@p10_5d',
            p10_5e='@p10_5e',
            p10_5f='@p10_5f',
           
            p10_5h='@p10_5h',
            p10_5i='@p10_5i',
            p10_5j='@p10_5j',

            p10_6a='@p10_6a',
            p10_6b='@p10_6b',
            p10_6c='@p10_6c',
            p10_6d='@p10_6d',
            p10_6e='@p10_6e',
            p10_6f='@p10_6f',
            p10_6g='@p10_6g',
            p10_6h='@p10_6h',
            p10_6i='@p10_6i',
            p10_6j='@p10_6j',
            p10_6k='@p10_6k',
            p10_6l='@p10_6l',
            p10_6m='@p10_6m',
            p10_6n='@p10_6n',
            p10_6o='@p10_6o',
            p10_6p='@p10_6p',
            p10_7a='@p10_7a',
            p10_7b='@p10_7b',
            p10_7c='@p10_7c',
            p10_7d='@p10_7d',
            p10_7e='@p10_7e',
            p10_7f='@p10_7f',
            p10_7g='@p10_7g',
            p10_7h='@p10_7h',
            p10_7i='@p10_7i',
            p10_8=@p10_8,
            p10_9=@p10_9,
            p10_010=@p10_010,
            p12_2=@p12_2,
            p12_3a='@p12_3a',
            p12_3b='@p12_3b',
            p12_3c='@p12_3c',
            p12_3d='@p12_3d',
            p12_3e='@p12_3e',
            p12_3f='@p12_3f',
            p12_3g='@p12_3g',
            p12_4a=@p12_4a,
            p12_4b='@p12_4b',
            p12_5=@p12_5,
            p12_6a='@p12_6a',
            p12_6b='@p12_6b',
            p12_6c='@p12_6c',
            p12_6d='@p12_6d',
            p12_6e='@p12_6e',
            p12_6f='@p12_6f',
            p12_6g='@p12_6g',
            p12_6h='@p12_6h',
            p12_7a='@p12_7a',
            p12_7b='@p12_7b',
            p12_7c='@p12_7c',
            p12_7d='@p12_7d',
            p12_7e='@p12_7e',
            p12_7f='@p12_7f',
            p12_7g='@p12_7g',
            p12_7h='@p12_7h',
            p12_7i='@p12_7i',
            p12_7j='@p12_7j',
            p12_7k='@p12_7k'
            WHERE identificador='@identificador' and consecutivo='@consecutivo'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>       
             
     <Consulta id="get_num_familiares">
        <sql>
        select count(*) from fichasocial.miembros where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>         
    <Consulta id="get_data_familiares">
        <sql>
        select * from fichasocial.miembros where identificador='@identificador' and consecutivo='@consecutivo';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                
    <Consulta id="impresion_vereditas_decreto">
        <sql>
            select * from FichaTecnica.impresion_vereditas where identificador= '@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>     
    <Consulta id="insertar_ficha_social_general">
        <sql>
            with rows as(INSERT INTO fichasocial.hogar
                (identificador,hogar_usuario,hogar_usuario_time)
            SELECT '@identificador','@usuario_id_elaboro',current_timestamp
            WHERE
                NOT EXISTS (
                    SELECT identificador FROM fichasocial.hogar WHERE identificador = '@identificador'
                ) returning identificador) select identificador from rows;
            
            with rows as(
            INSERT INTO fichasocial.miembros
                (identificador,consecutivo,miembro_usuario,miembro_usuario_time)
            SELECT '@identificador','1','@usuario_id_elaboro',current_timestamp 
            WHERE
            NOT EXISTS (
            SELECT identificador FROM fichasocial.miembros WHERE identificador = '@identificador' and consecutivo='1'
            )
            returning identificador) select identificador from rows;
            
            with rows as(
            INSERT INTO fichasocial.aprobacion
            (identificador)
            SELECT '@identificador' 
            WHERE
            NOT EXISTS (
            SELECT identificador FROM fichasocial.aprobacion WHERE identificador = '@identificador'
            )
            returning identificador) select identificador from rows;

            with rows as(
            INSERT INTO telefonos_beneficiarios
            (identificador)
            SELECT '@identificador'
            WHERE
            NOT EXISTS (
            SELECT identificador FROM telefonos_beneficiarios WHERE identificador = '@identificador'
            )
            returning identificador) select identificador from rows;
            
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>      
                  
    <Consulta id="insertar_ficha_social_miembro">
        <sql>
            with rows as(
            INSERT INTO fichasocial.miembros
                (identificador,consecutivo)
            SELECT '@identificador','@miembro' 
            WHERE
            NOT EXISTS (
            SELECT identificador FROM fichasocial.miembros WHERE identificador = '@identificador' and consecutivo='@miembro'
            )
            returning identificador) select identificador from rows;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                                
    <Consulta id="get_datos_generales">
        <sql>
            select "Dirección" as direccion,
            "MZ" as manzana,
            "LT" as lote,
            "Barrio" as barrio,
            "Localidad" as localidad,
            (SELECT string_agg(concat(concepto_ingreso,' de ' ,fecha_concepto), ', ')
           from concepto_ingreso where identificador ='@identificador') as concepto_ingreso,
            (select telefono_fijo_1 from telefonos_beneficiarios where identificador ='@identificador' )as telefono_fijo,
            (select celular_1 from telefonos_beneficiarios where identificador ='@identificador' )as telefono_cel
           from definitiva where "IDENTIFICADOR"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                                                           
    <Consulta id="get_toda_la_familia_vista">
        <sql>
        select 
        trim(regexp_replace(concat(p2_3,' ',p2_4,' ',p2_5,' ',p2_6), '\s+', ' ', 'g')) as nombre,
        CASE 
             WHEN p2_9='1'  THEN 'Cédula de ciudadania'
             WHEN p2_9='2'  THEN 'Cédula de Extranjería'
             WHEN p2_9='3'  THEN 'Tarjeta de Identidad'
             WHEN p2_9='4'  THEN 'Registro Civil'
             WHEN p2_9='5'  THEN 'Pasaporte'
             WHEN p2_9='6'  THEN 'NUIP'
             WHEN p2_9='7'  THEN 'Tarjeta de Extranjería'
        END as tipo_identificacion,
        p2_011 as nro_identificacion,
        EXTRACT(YEAR FROM(
        age(p2_7)
        ))as edad,
        CASE 
             WHEN p2_2='1'  THEN 'Jefe de familia'
             WHEN p2_2='2'  THEN 'Esposo(a)/Compañero(a)'
             WHEN p2_2='3'  THEN 'Hijo(a)'
             WHEN p2_2='4'  THEN 'Hermano(a)'
             WHEN p2_2='5'  THEN 'Padre o Madre'
             WHEN p2_2='6'  THEN 'Abuelo(a)'
             WHEN p2_2='7'  THEN 'Nuera/Yerno'
             WHEN p2_2='8'  THEN 'Nieto(a)'
             WHEN p2_2='9'  THEN 'Suegro(a)'
             WHEN p2_2='10'  THEN 'Otro Pariente'
             WHEN p2_2='11'  THEN 'Otro no pariente'
        END as parentesco
        from fichasocial.miembros where identificador='@identificador'
        order by edad
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>       
    <Consulta id="insertar_pre_aprobacion_social">
        <sql>
            update fichasocial.aprobacion
            set usuario_id_elaboro='@usuario_id_elaboro',
            estado_ficha='@estado_ficha' where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                             
                                                     
    <Consulta id="insertar_aprobacion_FichaSocial">
        <sql>
            update fichasocial.aprobacion
            set usuario_id_reviso='@usuario_id_reviso',
            usuario_reviso_contrato='@usuario_reviso_contrato',
            estado_ficha='@estado_ficha',
            reviso_fecha=current_timestamp
            where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                                                                              
                                                                                                     
    <Consulta id="update_ben_principal">
        <sql>
            update definitiva set 
            "Nombre 1"='@nombre_completo',
            "1er_Nombre_Ben1"='@nom1',
            "2do_Nombre_Ben1"='@nom2',
            "1er_Apellido_Ben1"='@ape1',
            "2do_Apellido_Ben1"='@ape2',
            "Cedula 1"='@ced'
            where "IDENTIFICADOR"='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                                                                                                                                                      
    <Consulta id="update_ben_secundario">
        <sql>
            update definitiva set 
            "Nombre 2"='@nombre_completo',
            "1er_Nombre_Ben2"='@nom1',
            "2do_Nombre_Ben2"='@nom2',
            "1er_Apellido_Ben2"='@ape1',
            "2do_Apellido_Ben2"='@ape2',
            "Cedula 2"='@ced'
            where "IDENTIFICADOR"='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="get_municipios_ficha_social">
        <sql>
            select * from deptos_municipios;
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>    
     <Consulta id="save_telefono_ficha_social">
        <sql>

            update telefonos_beneficiarios set telefono_fijo_1 ='@telefono_fijo',celular_1='@telefono_cel' where identificador='@identificador';

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>
    <Consulta id="update_elaboro_ficha_social">
        <sql>
        update fichasocial.aprobacion set 
            usuario_id_elaboro='@usuario_id_elaboro',
            usuario_elaboro_contrato='@usuario_elaboro_contrato',
            elaboro_fecha=current_timestamp,
            estado_ficha=1 
            where identificador='@identificador';

        update fichasocial.hogar set
            hogar_usuario_upd ='@usuario_id_elaboro',
            hogar_usuario_upd_time=current_timestamp
            where identificador='@identificador';

        update fichasocial.miembros set
            miembro_usuario_upd ='@usuario_id_elaboro',
            miembro_usuario_upd_time =current_timestamp
            where identificador='@identificador';

        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>    
    <Consulta id="save_obs_ficha_social">
        <sql>
          update fichasocial.aprobacion set 
            observaciones='@observacion'
            where identificador='@identificador';
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>   
                             
     <Consulta id="get_familia_resolucion">
        <sql>
          select concat(primer_nombre,' ',segundo_nombre,' ',"B01_Primer_Apellido",' ',"B02_Segundo_Apellido") as nombre 
          from "tbl_Miembros" where "Identificador"='@identificador'
        </sql>
        <conexion>atencion_reloca</conexion>
        <permisos>*</permisos>       
    </Consulta>                                                                           
                                                                                                                                            
                                    
                                                                    
</Consultas>


        